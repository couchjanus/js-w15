{"id":"js/test.js","dependencies":[{"name":"/home/janus/www/js-w15/package.json","includedInParent":true,"mtime":1566989384520}],"generated":{"js":"'use strict'; // function initStorage() {\n//   window.localStorage.getItem(\"basket\") ?\n//     window.localStorage.getItem(\"basket\") :\n//     window.localStorage.setItem(\"basket\", '');\n// }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction initStorage() {\n  window.localStorage.getItem(\"basket\") ? window.localStorage.getItem(\"basket\") : window.localStorage.setItem(\"basket\", JSON.stringify([]));\n}\n\nvar data = [{\n  id: 0,\n  name: \"Cool Cat\",\n  price: 77,\n  picture: [\"cat1.jpg\", \"cat4.jpg\", \"cat5.jpg\", \"cat6.jpg\", \"cat7.jpg\"],\n  subtitle: [\"Mama mia!\", \"Je t'adore\", \"Beach cat\", \"Tropical cat\", \"White building cat\"],\n  description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Possimus dignissimos, maxime ea excepturi veritatis itaque.\"\n}, {\n  id: 1,\n  name: \"Black Cat\",\n  price: 66,\n  picture: [\"cat2.jpg\", \"cat4.jpg\", \"cat5.jpg\", \"cat6.jpg\", \"cat7.jpg\"],\n  subtitle: [\"Tropical cat\", \"Mama mia!\", \"Je t'adore\", \"Beach cat\", \"White building cat\"],\n  description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Possimus dignissimos, maxime ea excepturi veritatis itaque.\"\n}];\n\nvar Product = function Product(id, name, price, picture, amount) {\n  _classCallCheck(this, Product);\n\n  this.id = id;\n  this.name = name;\n  this.price = price;\n  this.picture = picture;\n  this.amount = amount;\n};\n\n(function () {\n  // Проверить, поддерживает ли браузер API sessionStorage и localStorage можно с помощью следующей строки:\n  // if (window.sessionStorage && window.localStorage) {\n  //   // объекты sessionStorage и localstorage поддерживаются\n  //   console.log('объекты sessionStorage и localstorage поддерживаются');\n  // } else {\n  //   // объекты sessionStorage и localstorage не поддерживаются\n  //   console.log('объекты sessionStorage и localstorage не поддерживаются');\n  // }\n  initStorage(); // if (localStorage) {\n  //     console.log(\"It's basket storage\");\n  //     console.log('localStorage.length = ', localStorage.length);\n  //     console.log('localStorage.basket.length = ', localStorage.basket.length);\n  //     // LocalStorage имеет простой API - всего 5 метода.\n  //     // Storage.key(Ключ)  // Получить имя n-ного ключа в Storage\n  //     console.log('Получить имя n-ного ключа в Storage: ', localStorage.key(0));\n  //     // Storage.getItem(Ключ)  // Получить значение ключа.\n  //     console.log('Получить имя n-ного ключа в Storage: ', localStorage.getItem('basket'));\n  //     // Storage.setItem(Ключ, Значение)  // Добавление  ключа в Storage или обновление его значение, если ключ уже существовал.\n  //     localStorage.setItem('basket', 'true');\n  //     console.log('Добавление  ключа в Storage или обновление его значение, если ключ уже существовал: ', localStorage.getItem('basket'));\n  //     // Storage.removeItem(Ключ)   // Удалит этот ключ из Storage.\n  //     localStorage.removeItem('basket');\n  //     console.log('Удалит этот ключ из Storage: ', localStorage.getItem('basket'));\n  //     // Storage.clear()   // При вызове, метод удалит все ключи из Storage.\n  //     localStorage.clear();\n  //     console.log('localStorage.length = ', localStorage.length);\n  // }\n  // let stringifyData = JSON.stringify(data);\n  // console.log(stringifyData);\n  // let parseData = JSON.parse(stringifyData);\n  // console.log(parseData[1] );\n  // console.log(parseData[1]['picture'] );\n  // console.log(parseData[1]['picture'][1] );\n  // ---------------------------------\n  // создадим объект\n  // let product = {\n  //   id: 1, \n  //   name: 'Cat', \n  //   price: 555, \n  //   picture:['cat1.jpg', 'cat2.jpg', 'cat3.jpg'],\n  //   amount: 1\n  // };\n  // let serialProduct = JSON.stringify(product); // сериализуем product\n  // console.log('serialProduct: ', serialProduct);\n  // localStorage.setItem(\"basket\", serialProduct); // запишем serialProduct в хранилище по ключу \"basket\"\n  // console.log('localStorage.basket: ', localStorage.basket);\n  // let returnProduct = JSON.parse(localStorage.getItem(\"basket\")) // парсим basket обратно в объект\n  // console.log('returnProduct: ', returnProduct);\n  // let tmpProducts = new Product(id, name, price, picture, 1);\n  // window.localStorage.setItem(\"basket\",JSON.stringify(tmpProducts));\n  // console.log('localStorage.basket: ', localStorage.basket);\n  // =============== Стрелочные функции =========================\n  // Базовый синтаксис\n  // (param1, param2, …, paramN) => { statements }\n  // (param1, param2, …, paramN) => expression\n  // эквивалентно: (param1, param2, …, paramN) => { return expression; }\n  // Круглые скобки не обязательны для единственного параметра:\n  // (singleParam) => { statements }\n  // singleParam => { statements }\n  // Функция без параметров нуждается в круглых скобках:\n  // () => { statements }\n  // () => expression \n  // Эквивалентно: () => { return expression; }\n  // Расширенный синтаксис\n  // Когда возвращаете литеральное выражение объекта, заключите тело в скобки\n  // params => ({foo: bar})\n  // Rest параметры и параметры по умолчанию поддерживаются\n  // (param1, param2, ...rest) => { statements }\n  // (param1 = defaultValue1, param2, …, paramN = defaultValueN) => { statements }\n  // Деструктуризация тоже поддерживается\n  // var f = ([a, b] = [1, 2], {x: c} = {x: a + b}) => a + b + c;\n  // f();  // 6\n  // В некоторых функциональных шаблонах приветствуются более короткие функции. Сравните:\n  // var elements = [\n  //   'Hydrogen',\n  //   'Helium',\n  //   'Lithium',\n  //   'Beryllium'\n  // ];\n  // elements.map(function(element) {\n  //   return element.length;\n  // }); // Это выражение вернет массив [8, 6, 7, 9]\n  // Функцию выше можно записать как стрелочную функцию:\n  // elements.map((element) => {\n  //   return element.length;\n  // }); // [8, 6, 7, 9]\n  // Если единственным оператором в выражении стрелочной функции является return,\n  // можно удалить return и окружающие фигурные скобки\n  // elements.map(element => element.length); // [8, 6, 7, 9]\n  // В данном случае, поскольку нам нужно только свойство length, мы можем использовать деструктуризированный параметр:\n  // Обратите внимание, что строка `\"length\"` соответствует свойству, которое мы хотим получить,\n  // в то время как `lengthFooBArX` это просто имя переменной, которую можно назвать как вы хотите\n  // elements.map(({ \"length\": lengthFooBArX }) => lengthFooBArX); // [8, 6, 7, 9]\n  // Это задание деструктуризированного параметра может быть записано, как показано ниже. Тем не менее, обратите внимание,\n  // что нет строки `\"length\"`, чтобы выбрать, какое свойство мы хотим получить. Вместо этого в качестве свойства,\n  // которое мы хотим извлечь из объекта, используется само литеральное имя переменной `length`\n  // elements.map(({ length }) => length); // [8, 6, 7, 9]\n  // Лямбда-выражения присутствуют в большинстве современных языков программирования (Python, Ruby, Java ...). Это просто выражения, которые создают функции. Это действительно важно для языка программирования для поддержки функций первого класса, что в основном означает передачу функций в качестве аргументов другим функциям или присвоение их переменным.\n  // В пре-ES6 JavaScript у нас есть функциональные выражения, которые дают нам анонимную функцию (функцию без имени).\n  // var anon = function (a, b) {return a + b};\n  // В ES6 у нас есть функции стрелок с более гибким синтаксисом, которые имеют некоторые бонусные функции и ошибки.\n  // мы могли бы написать приведенный выше пример как:\n  // var anon = (a, b) => a + b;\n  // или же\n  // var anon = (a, b) => {return a + b};\n  // если у нас есть только один параметр, мы можем потерять скобки\n  // var anon = a => a;\n  // и без параметров\n  // var () => {} // noop\n  // это выглядит довольно хорошо, когда вы меняете что-то вроде:\n  // [1,2,3,4] .filter (функция (значение) {возвращаемое значение% 2 === 0});\n  // к:\n  // [1,2,3,4] .filter (значение => значение% 2 === 0);\n  // Одним из основных преимуществ функций стрелок является то, что они не имеют своих собственных значений. Именно это лексически связано с огибающей. Это значит, что мы можем попрощаться с этим ужасным рисунком:\n  // class Logger {\n  //   dumpData(data) {\n  //     var _this = this;\n  //     // this dumps data to a file and get the name of the file via a callback\n  //     dump(data, function (outputFile) {\n  //       _this.latestLog = outputFile;\n  //     });\n  //   }\n  // }\n  // using arrow functions\n  // class Logger {\n  //   dumpData(data) {\n  //     dump(data, outputFile => this.latestLog = outputFile);\n  //   }\n  // }\n  // However there are some gotchas you should be aware of:\n  // This should be pretty obvious, but because this is lexically bound you can't change it; call() and apply() will not be able to provide another value for this.\n  // There is no arguments variable:\n  // (function () {console.log(arguments)})(1, 2); // will output [1, 2]\n  // (() => console.log(arguments))(1, 2); // will raise ReferenceError: arguments is not defined\n  // Be careful when returning object literals\n  // (() => {foo: 1})() // this will return undefined. 'foo: 1' is interpreted as a statement composed of a label and the literal 1\n  // the correct way should be wrapping it with parenthesis\n  // (() => ({foo: 1}))() // returns Object {foo: 1}\n  // Remember this is all ES6 and not supported by all browsers but you can always use Babel.\n  // Однако есть некоторые ошибки, о которых вы должны знать:\n  // Это должно быть довольно очевидно, но поскольку это лексически связано, вы не можете его изменить; call () и apply () не смогут предоставить другое значение для этого.\n  // Переменная аргументов отсутствует:\n  // (function () {console.log (arguments)}) (1, 2); // выведем [1, 2]\n  // (() => console.log (arguments)) (1, 2); // вызовет ReferenceError: аргументы не определены\n  // Будьте осторожны при возврате литералов объекта\n  // (() => {foo: 1}) () // это вернет undefined. 'foo: 1' интерпретируется как утверждение, состоящее из метки и литерала 1\n  // правильный путь должен заключаться в скобки\n  // (() => ({foo: 1})) () // возвращает объект {foo: 1}\n  // Помните, что это все ES6 и поддерживается не всеми браузерами, но вы всегда можете использовать Babel.\n  // let index = e.target.closest('.cart-item').getAttribute('id');\n  // console.log('index= ', index);\n  // x => x.id === +(index))\n  // ================== Метод some ===========================\n\n  localStorage.clear();\n  initStorage();\n  var products = []; // создадим объект\n\n  var prod = {\n    id: 1,\n    name: 'Nice Cat',\n    price: 555,\n    picture: ['cat1.jpg', 'cat2.jpg', 'cat3.jpg'],\n    amount: 1\n  };\n  products.push(new Product(prod.id, prod.name, prod.price, prod.picture, prod.amount)); // tmpProducts.push(new Product(prod.id,prod.name,prod.price,prod.picture,1));\n\n  window.localStorage.setItem(\"basket\", JSON.stringify(products));\n\n  function getProducts() {\n    return JSON.parse(window.localStorage.getItem(\"basket\"));\n  }\n\n  var tmpProducts = getProducts();\n  console.log('tmpProducts: ', tmpProducts); // Метод some() вызывает переданную функцию callback один раз для каждого элемента, присутствующего в массиве до тех пор, пока не найдет такой, для которого callback вернет истинное значение (значение, становящееся равным true при приведении его к типу Boolean). \n  // Проверка значений элементов массива - существует ли в массиве какой-нибудь элемент с elem.id = id.\n\n  var id = 1;\n  var exist = tmpProducts.some(function (elem) {\n    return elem.id === id;\n  }); // Если такой элемент найден, метод some() немедленно вернёт true. В противном случае, если callback вернёт false для всех элементов массива, метод some() вернёт false. \n\n  console.log(exist); // Функция callback вызывается только для индексов массива, имеющих присвоенные значения; она не вызывается для индексов, которые были удалены или которым значения никогда не присваивались.\n  // if(tmpProducts.length > 0){\n  //   let exist = tmpProducts.some(elem => {\n  //     return elem.id === prod.id;\n  //   });\n  // }\n  // Функция callback вызывается с тремя аргументами: значением элемента, индексом элемента и массивом, по которому осуществляется проход.\n  // Метод some() не изменяет массив, для которого он был вызван.\n\n  console.log(tmpProducts); // Диапазон элементов, обрабатываемых методом some(), устанавливается до первого вызова функции callback. Элементы, добавленные в массив после начала выполнения метода some(), не будут посещены функцией callback. Если существующие элементы массива изменятся, значения, переданные в функцию callback, будут значениями на тот момент времени, когда метод some() посетит их; удалённые элементы посещены не будут.\n  // Пример: проверка значений элементов массива\n\n  function isBiggerThan10(element, index, array) {\n    return element > 10;\n  }\n\n  [2, 5, 8, 1, 4].some(isBiggerThan10); // false\n\n  [12, 5, 8, 1, 4].some(isBiggerThan10); // true\n  // Стрелочные функции предоставляют более краткий синтаксис для подобных проверок.\n\n  [2, 5, 8, 1, 4].some(function (elem) {\n    return elem > 10;\n  }); // false\n\n  [12, 5, 8, 1, 4].some(function (elem) {\n    return elem > 10;\n  }); // true\n  // if(tmpProducts.length > 0){\n  //   let exist = tmpProducts.some(elem => {\n  //     return elem.id === prod.id;\n  //   });\n  //   if(exist){\n  //     tmpProducts.forEach(elem => {\n  //         if(elem.id === prod.id){\n  //           elem.amount += 1;\n  //         }\n  //     })\n  //   } else {\n  //     tmpProducts.push(new Product(prod.id,prod.name,prod.price,prod.picture,1));\n  //   }\n  // }\n  // else{\n  //   tmpProducts.push(new Product(prod.id,prod.name,prod.price,prod.picture,1));\n  // }\n  // window.localStorage.setItem(\"basket\",JSON.stringify(tmpProducts));\n  // ================== Метод find ===========================\n  // Метод find() возвращает значение первого найденного в массиве элемента, которое удовлетворяет условию переданному в callback функции.  В противном случае возвращается undefined.\n  // Если вам нужно найти позицию элемента или наличие элемента в массиве, используйте Array.prototype.indexOf() или Array.prototype.includes() соответственно.\n  //arr.find(callback[, thisArg])\n  // Параметры\n  // callback - Функция, вызывающаяся для каждого значения в массиве, принимает три аргумента:\n  // element - Текущий обрабатываемый элемент в массиве.\n  // index - Индекс текущего обрабатываемого элемента в массиве.\n  // array - Массив, по которому осуществляется проход.\n  // thisArg - Необязательный параметр. Значение, используемое в качестве this при выполнении функции callback.\n  // Возвращаемое значение - Значение элемента из массива, если элемент прошёл проверку, иначе undefined.\n  // Метод find вызывает переданную функцию callback один раз для каждого элемента, присутствующего в массиве, до тех пор, пока она не вернёт true. Если такой элемент найден, метод find немедленно вернёт значение этого элемента. В противном случае, метод find вернёт undefined. До Firefox 34 функция callback не вызывалась для «дырок» в массивах (bug 1058394).\n  // Функция callback вызывается с тремя аргументами: значением элемента, индексом элемента и массивом, по которому осуществляется проход.\n  // Если в метод find был передан параметр thisArg, при вызове callback он будет использоваться в качестве значения this. В противном случае в качестве значения this будет использоваться значение undefined.\n  // Метод find не изменяет массив, для которого он был вызван.\n  // Диапазон элементов, обрабатываемых методом find, устанавливается до первого вызова функции callback. Элементы, добавленные в массив после начала выполнения метода find, не будут посещены функцией callback. Если существующие, непосещённые элементы массива изменяются функцией callback, их значения, переданные в функцию, будут значениями на тот момент времени когда метод find посетит их; удалённые элементы все еще будут посещены. \n  // Пример: поиск простого числа в массиве\n  // Следующий пример находит в массиве положительных чисел элемент, являющийся простым числом (либо возвращает undefined, если в массиве нет простых чисел).\n  // function isPrime(element, index, array) {\n  //   var start = 2;\n  //   while (start <= Math.sqrt(element)) {\n  //     if (element % start++ < 1) {\n  //       return false;\n  //     }\n  //   }\n  //   return element > 1;\n  // }\n  // console.log([4, 6, 8, 12].find(isPrime)); // undefined, не найдено\n  // console.log([4, 5, 8, 12].find(isPrime)); // 5\n  // Метод indexOf() сравнивает искомый элемент searchElement с элементами в массиве, используя строгое сравнение (метод использует оператор ===, тройное равно).\n  // let index = e.target.closest('.cart-item').getAttribute('id');\n  // console.log('index= ', index);\n  // tmpProducts.splice(tmpProducts.indexOf(tmpProducts.find(x => x.id === +(index))), 1);\n})();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"js/test.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":14},"source":"js/test.js","original":{"line":3,"column":0}},{"generated":{"line":2,"column":0},"source":"js/test.js","original":{"line":4,"column":0}},{"generated":{"line":3,"column":0},"source":"js/test.js","original":{"line":5,"column":0}},{"generated":{"line":4,"column":0},"source":"js/test.js","original":{"line":6,"column":0}},{"generated":{"line":5,"column":0},"source":"js/test.js","original":{"line":7,"column":0}},{"generated":{"line":9,"column":0},"source":"js/test.js","original":{"line":9,"column":0}},{"name":"initStorage","generated":{"line":9,"column":9},"source":"js/test.js","original":{"line":9,"column":9}},{"generated":{"line":9,"column":20},"source":"js/test.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":23},"source":"js/test.js","original":{"line":9,"column":23}},{"name":"window","generated":{"line":10,"column":0},"source":"js/test.js","original":{"line":10,"column":2}},{"name":"window","generated":{"line":10,"column":2},"source":"js/test.js","original":{"line":10,"column":2}},{"generated":{"line":10,"column":8},"source":"js/test.js","original":{"line":10,"column":8}},{"name":"localStorage","generated":{"line":10,"column":9},"source":"js/test.js","original":{"line":10,"column":9}},{"generated":{"line":10,"column":21},"source":"js/test.js","original":{"line":10,"column":2}},{"name":"getItem","generated":{"line":10,"column":22},"source":"js/test.js","original":{"line":10,"column":22}},{"generated":{"line":10,"column":29},"source":"js/test.js","original":{"line":10,"column":2}},{"generated":{"line":10,"column":30},"source":"js/test.js","original":{"line":10,"column":30}},{"generated":{"line":10,"column":38},"source":"js/test.js","original":{"line":10,"column":2}},{"name":"window","generated":{"line":10,"column":42},"source":"js/test.js","original":{"line":11,"column":4}},{"generated":{"line":10,"column":48},"source":"js/test.js","original":{"line":11,"column":10}},{"name":"localStorage","generated":{"line":10,"column":49},"source":"js/test.js","original":{"line":11,"column":11}},{"generated":{"line":10,"column":61},"source":"js/test.js","original":{"line":11,"column":4}},{"name":"getItem","generated":{"line":10,"column":62},"source":"js/test.js","original":{"line":11,"column":24}},{"generated":{"line":10,"column":69},"source":"js/test.js","original":{"line":11,"column":4}},{"generated":{"line":10,"column":70},"source":"js/test.js","original":{"line":11,"column":32}},{"generated":{"line":10,"column":78},"source":"js/test.js","original":{"line":11,"column":4}},{"generated":{"line":10,"column":79},"source":"js/test.js","original":{"line":10,"column":2}},{"name":"window","generated":{"line":10,"column":82},"source":"js/test.js","original":{"line":12,"column":4}},{"generated":{"line":10,"column":88},"source":"js/test.js","original":{"line":12,"column":10}},{"name":"localStorage","generated":{"line":10,"column":89},"source":"js/test.js","original":{"line":12,"column":11}},{"generated":{"line":10,"column":101},"source":"js/test.js","original":{"line":12,"column":4}},{"name":"setItem","generated":{"line":10,"column":102},"source":"js/test.js","original":{"line":12,"column":24}},{"generated":{"line":10,"column":109},"source":"js/test.js","original":{"line":12,"column":4}},{"generated":{"line":10,"column":110},"source":"js/test.js","original":{"line":12,"column":32}},{"generated":{"line":10,"column":118},"source":"js/test.js","original":{"line":12,"column":4}},{"name":"JSON","generated":{"line":10,"column":120},"source":"js/test.js","original":{"line":12,"column":42}},{"generated":{"line":10,"column":124},"source":"js/test.js","original":{"line":12,"column":46}},{"name":"stringify","generated":{"line":10,"column":125},"source":"js/test.js","original":{"line":12,"column":47}},{"generated":{"line":10,"column":134},"source":"js/test.js","original":{"line":12,"column":42}},{"generated":{"line":10,"column":135},"source":"js/test.js","original":{"line":12,"column":57}},{"generated":{"line":10,"column":137},"source":"js/test.js","original":{"line":12,"column":42}},{"generated":{"line":10,"column":138},"source":"js/test.js","original":{"line":12,"column":4}},{"generated":{"line":10,"column":139},"source":"js/test.js","original":{"line":10,"column":2}},{"generated":{"line":11,"column":0},"source":"js/test.js","original":{"line":13,"column":1}},{"generated":{"line":13,"column":0},"source":"js/test.js","original":{"line":15,"column":0}},{"name":"data","generated":{"line":13,"column":4},"source":"js/test.js","original":{"line":15,"column":6}},{"generated":{"line":13,"column":8},"source":"js/test.js","original":{"line":15,"column":10}},{"generated":{"line":13,"column":11},"source":"js/test.js","original":{"line":15,"column":13}},{"generated":{"line":13,"column":12},"source":"js/test.js","original":{"line":15,"column":14}},{"name":"id","generated":{"line":14,"column":0},"source":"js/test.js","original":{"line":16,"column":2}},{"name":"id","generated":{"line":14,"column":2},"source":"js/test.js","original":{"line":16,"column":2}},{"generated":{"line":14,"column":4},"source":"js/test.js","original":{"line":16,"column":4}},{"generated":{"line":14,"column":6},"source":"js/test.js","original":{"line":16,"column":6}},{"generated":{"line":14,"column":7},"source":"js/test.js","original":{"line":15,"column":14}},{"name":"name","generated":{"line":15,"column":0},"source":"js/test.js","original":{"line":17,"column":2}},{"name":"name","generated":{"line":15,"column":2},"source":"js/test.js","original":{"line":17,"column":2}},{"generated":{"line":15,"column":6},"source":"js/test.js","original":{"line":17,"column":6}},{"generated":{"line":15,"column":8},"source":"js/test.js","original":{"line":17,"column":8}},{"generated":{"line":15,"column":18},"source":"js/test.js","original":{"line":15,"column":14}},{"name":"price","generated":{"line":16,"column":0},"source":"js/test.js","original":{"line":18,"column":2}},{"name":"price","generated":{"line":16,"column":2},"source":"js/test.js","original":{"line":18,"column":2}},{"generated":{"line":16,"column":7},"source":"js/test.js","original":{"line":18,"column":7}},{"generated":{"line":16,"column":9},"source":"js/test.js","original":{"line":18,"column":9}},{"generated":{"line":16,"column":11},"source":"js/test.js","original":{"line":15,"column":14}},{"name":"picture","generated":{"line":17,"column":0},"source":"js/test.js","original":{"line":19,"column":2}},{"name":"picture","generated":{"line":17,"column":2},"source":"js/test.js","original":{"line":19,"column":2}},{"generated":{"line":17,"column":9},"source":"js/test.js","original":{"line":19,"column":9}},{"generated":{"line":17,"column":11},"source":"js/test.js","original":{"line":19,"column":11}},{"generated":{"line":17,"column":12},"source":"js/test.js","original":{"line":19,"column":12}},{"generated":{"line":17,"column":22},"source":"js/test.js","original":{"line":19,"column":11}},{"generated":{"line":17,"column":24},"source":"js/test.js","original":{"line":19,"column":24}},{"generated":{"line":17,"column":34},"source":"js/test.js","original":{"line":19,"column":11}},{"generated":{"line":17,"column":36},"source":"js/test.js","original":{"line":19,"column":36}},{"generated":{"line":17,"column":46},"source":"js/test.js","original":{"line":19,"column":11}},{"generated":{"line":17,"column":48},"source":"js/test.js","original":{"line":19,"column":48}},{"generated":{"line":17,"column":58},"source":"js/test.js","original":{"line":19,"column":11}},{"generated":{"line":17,"column":60},"source":"js/test.js","original":{"line":19,"column":60}},{"generated":{"line":17,"column":70},"source":"js/test.js","original":{"line":19,"column":11}},{"generated":{"line":17,"column":71},"source":"js/test.js","original":{"line":15,"column":14}},{"name":"subtitle","generated":{"line":18,"column":0},"source":"js/test.js","original":{"line":20,"column":2}},{"name":"subtitle","generated":{"line":18,"column":2},"source":"js/test.js","original":{"line":20,"column":2}},{"generated":{"line":18,"column":10},"source":"js/test.js","original":{"line":20,"column":10}},{"generated":{"line":18,"column":12},"source":"js/test.js","original":{"line":20,"column":12}},{"generated":{"line":18,"column":13},"source":"js/test.js","original":{"line":20,"column":13}},{"generated":{"line":18,"column":24},"source":"js/test.js","original":{"line":20,"column":12}},{"generated":{"line":18,"column":26},"source":"js/test.js","original":{"line":20,"column":26}},{"generated":{"line":18,"column":38},"source":"js/test.js","original":{"line":20,"column":12}},{"generated":{"line":18,"column":40},"source":"js/test.js","original":{"line":20,"column":40}},{"generated":{"line":18,"column":51},"source":"js/test.js","original":{"line":20,"column":12}},{"generated":{"line":18,"column":53},"source":"js/test.js","original":{"line":20,"column":53}},{"generated":{"line":18,"column":67},"source":"js/test.js","original":{"line":20,"column":12}},{"generated":{"line":18,"column":69},"source":"js/test.js","original":{"line":20,"column":69}},{"generated":{"line":18,"column":89},"source":"js/test.js","original":{"line":20,"column":12}},{"generated":{"line":18,"column":90},"source":"js/test.js","original":{"line":15,"column":14}},{"name":"description","generated":{"line":19,"column":0},"source":"js/test.js","original":{"line":21,"column":2}},{"name":"description","generated":{"line":19,"column":2},"source":"js/test.js","original":{"line":21,"column":2}},{"generated":{"line":19,"column":13},"source":"js/test.js","original":{"line":21,"column":13}},{"generated":{"line":19,"column":15},"source":"js/test.js","original":{"line":21,"column":15}},{"generated":{"line":20,"column":0},"source":"js/test.js","original":{"line":15,"column":14}},{"generated":{"line":20,"column":1},"source":"js/test.js","original":{"line":15,"column":13}},{"generated":{"line":20,"column":3},"source":"js/test.js","original":{"line":23,"column":0}},{"name":"id","generated":{"line":21,"column":0},"source":"js/test.js","original":{"line":24,"column":2}},{"name":"id","generated":{"line":21,"column":2},"source":"js/test.js","original":{"line":24,"column":2}},{"generated":{"line":21,"column":4},"source":"js/test.js","original":{"line":24,"column":4}},{"generated":{"line":21,"column":6},"source":"js/test.js","original":{"line":24,"column":6}},{"generated":{"line":21,"column":7},"source":"js/test.js","original":{"line":23,"column":0}},{"name":"name","generated":{"line":22,"column":0},"source":"js/test.js","original":{"line":25,"column":2}},{"name":"name","generated":{"line":22,"column":2},"source":"js/test.js","original":{"line":25,"column":2}},{"generated":{"line":22,"column":6},"source":"js/test.js","original":{"line":25,"column":6}},{"generated":{"line":22,"column":8},"source":"js/test.js","original":{"line":25,"column":8}},{"generated":{"line":22,"column":19},"source":"js/test.js","original":{"line":23,"column":0}},{"name":"price","generated":{"line":23,"column":0},"source":"js/test.js","original":{"line":26,"column":2}},{"name":"price","generated":{"line":23,"column":2},"source":"js/test.js","original":{"line":26,"column":2}},{"generated":{"line":23,"column":7},"source":"js/test.js","original":{"line":26,"column":7}},{"generated":{"line":23,"column":9},"source":"js/test.js","original":{"line":26,"column":9}},{"generated":{"line":23,"column":11},"source":"js/test.js","original":{"line":23,"column":0}},{"name":"picture","generated":{"line":24,"column":0},"source":"js/test.js","original":{"line":27,"column":2}},{"name":"picture","generated":{"line":24,"column":2},"source":"js/test.js","original":{"line":27,"column":2}},{"generated":{"line":24,"column":9},"source":"js/test.js","original":{"line":27,"column":9}},{"generated":{"line":24,"column":11},"source":"js/test.js","original":{"line":27,"column":11}},{"generated":{"line":24,"column":12},"source":"js/test.js","original":{"line":27,"column":12}},{"generated":{"line":24,"column":22},"source":"js/test.js","original":{"line":27,"column":11}},{"generated":{"line":24,"column":24},"source":"js/test.js","original":{"line":27,"column":24}},{"generated":{"line":24,"column":34},"source":"js/test.js","original":{"line":27,"column":11}},{"generated":{"line":24,"column":36},"source":"js/test.js","original":{"line":27,"column":36}},{"generated":{"line":24,"column":46},"source":"js/test.js","original":{"line":27,"column":11}},{"generated":{"line":24,"column":48},"source":"js/test.js","original":{"line":27,"column":48}},{"generated":{"line":24,"column":58},"source":"js/test.js","original":{"line":27,"column":11}},{"generated":{"line":24,"column":60},"source":"js/test.js","original":{"line":27,"column":60}},{"generated":{"line":24,"column":70},"source":"js/test.js","original":{"line":27,"column":11}},{"generated":{"line":24,"column":71},"source":"js/test.js","original":{"line":23,"column":0}},{"name":"subtitle","generated":{"line":25,"column":0},"source":"js/test.js","original":{"line":28,"column":2}},{"name":"subtitle","generated":{"line":25,"column":2},"source":"js/test.js","original":{"line":28,"column":2}},{"generated":{"line":25,"column":10},"source":"js/test.js","original":{"line":28,"column":10}},{"generated":{"line":25,"column":12},"source":"js/test.js","original":{"line":28,"column":12}},{"generated":{"line":25,"column":13},"source":"js/test.js","original":{"line":28,"column":13}},{"generated":{"line":25,"column":27},"source":"js/test.js","original":{"line":28,"column":12}},{"generated":{"line":25,"column":29},"source":"js/test.js","original":{"line":28,"column":29}},{"generated":{"line":25,"column":40},"source":"js/test.js","original":{"line":28,"column":12}},{"generated":{"line":25,"column":42},"source":"js/test.js","original":{"line":28,"column":42}},{"generated":{"line":25,"column":54},"source":"js/test.js","original":{"line":28,"column":12}},{"generated":{"line":25,"column":56},"source":"js/test.js","original":{"line":28,"column":56}},{"generated":{"line":25,"column":67},"source":"js/test.js","original":{"line":28,"column":12}},{"generated":{"line":25,"column":69},"source":"js/test.js","original":{"line":28,"column":69}},{"generated":{"line":25,"column":89},"source":"js/test.js","original":{"line":28,"column":12}},{"generated":{"line":25,"column":90},"source":"js/test.js","original":{"line":23,"column":0}},{"name":"description","generated":{"line":26,"column":0},"source":"js/test.js","original":{"line":29,"column":2}},{"name":"description","generated":{"line":26,"column":2},"source":"js/test.js","original":{"line":29,"column":2}},{"generated":{"line":26,"column":13},"source":"js/test.js","original":{"line":29,"column":13}},{"generated":{"line":26,"column":15},"source":"js/test.js","original":{"line":29,"column":15}},{"generated":{"line":27,"column":0},"source":"js/test.js","original":{"line":23,"column":0}},{"generated":{"line":27,"column":1},"source":"js/test.js","original":{"line":15,"column":13}},{"generated":{"line":27,"column":2},"source":"js/test.js","original":{"line":15,"column":0}},{"name":"Product","generated":{"line":29,"column":4},"source":"js/test.js","original":{"line":32,"column":6}},{"generated":{"line":29,"column":14},"source":"js/test.js","original":{"line":33,"column":2}},{"name":"id","generated":{"line":29,"column":31},"source":"js/test.js","original":{"line":33,"column":14}},{"generated":{"line":29,"column":33},"source":"js/test.js","original":{"line":33,"column":2}},{"name":"name","generated":{"line":29,"column":35},"source":"js/test.js","original":{"line":33,"column":18}},{"generated":{"line":29,"column":39},"source":"js/test.js","original":{"line":33,"column":2}},{"name":"price","generated":{"line":29,"column":41},"source":"js/test.js","original":{"line":33,"column":24}},{"generated":{"line":29,"column":46},"source":"js/test.js","original":{"line":33,"column":2}},{"name":"picture","generated":{"line":29,"column":48},"source":"js/test.js","original":{"line":33,"column":31}},{"generated":{"line":29,"column":55},"source":"js/test.js","original":{"line":33,"column":2}},{"name":"amount","generated":{"line":29,"column":57},"source":"js/test.js","original":{"line":33,"column":40}},{"generated":{"line":29,"column":63},"source":"js/test.js","original":{"line":33,"column":2}},{"generated":{"line":29,"column":65},"source":"js/test.js","original":{"line":33,"column":47}},{"generated":{"line":30,"column":0},"source":"js/test.js","original":{"line":33,"column":47}},{"generated":{"line":32,"column":0},"source":"js/test.js","original":{"line":34,"column":8}},{"name":"id","generated":{"line":32,"column":7},"source":"js/test.js","original":{"line":34,"column":13}},{"generated":{"line":32,"column":9},"source":"js/test.js","original":{"line":34,"column":8}},{"name":"id","generated":{"line":32,"column":12},"source":"js/test.js","original":{"line":34,"column":18}},{"generated":{"line":32,"column":14},"source":"js/test.js","original":{"line":34,"column":8}},{"generated":{"line":33,"column":0},"source":"js/test.js","original":{"line":35,"column":8}},{"name":"name","generated":{"line":33,"column":7},"source":"js/test.js","original":{"line":35,"column":13}},{"generated":{"line":33,"column":11},"source":"js/test.js","original":{"line":35,"column":8}},{"name":"name","generated":{"line":33,"column":14},"source":"js/test.js","original":{"line":35,"column":20}},{"generated":{"line":33,"column":18},"source":"js/test.js","original":{"line":35,"column":8}},{"generated":{"line":34,"column":0},"source":"js/test.js","original":{"line":36,"column":8}},{"name":"price","generated":{"line":34,"column":7},"source":"js/test.js","original":{"line":36,"column":13}},{"generated":{"line":34,"column":12},"source":"js/test.js","original":{"line":36,"column":8}},{"name":"price","generated":{"line":34,"column":15},"source":"js/test.js","original":{"line":36,"column":21}},{"generated":{"line":34,"column":20},"source":"js/test.js","original":{"line":36,"column":8}},{"generated":{"line":35,"column":0},"source":"js/test.js","original":{"line":37,"column":8}},{"name":"picture","generated":{"line":35,"column":7},"source":"js/test.js","original":{"line":37,"column":13}},{"generated":{"line":35,"column":14},"source":"js/test.js","original":{"line":37,"column":8}},{"name":"picture","generated":{"line":35,"column":17},"source":"js/test.js","original":{"line":37,"column":23}},{"generated":{"line":35,"column":24},"source":"js/test.js","original":{"line":37,"column":8}},{"generated":{"line":36,"column":0},"source":"js/test.js","original":{"line":38,"column":8}},{"name":"amount","generated":{"line":36,"column":7},"source":"js/test.js","original":{"line":38,"column":13}},{"generated":{"line":36,"column":13},"source":"js/test.js","original":{"line":38,"column":8}},{"name":"amount","generated":{"line":36,"column":16},"source":"js/test.js","original":{"line":38,"column":22}},{"generated":{"line":36,"column":22},"source":"js/test.js","original":{"line":38,"column":8}},{"generated":{"line":37,"column":0},"source":"js/test.js","original":{"line":39,"column":3}},{"generated":{"line":39,"column":0},"source":"js/test.js","original":{"line":42,"column":0}},{"generated":{"line":39,"column":1},"source":"js/test.js","original":{"line":42,"column":1}},{"generated":{"line":39,"column":13},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":40,"column":0},"source":"js/test.js","original":{"line":44,"column":2}},{"generated":{"line":41,"column":0},"source":"js/test.js","original":{"line":45,"column":2}},{"generated":{"line":42,"column":0},"source":"js/test.js","original":{"line":46,"column":2}},{"generated":{"line":43,"column":0},"source":"js/test.js","original":{"line":47,"column":2}},{"generated":{"line":44,"column":0},"source":"js/test.js","original":{"line":48,"column":2}},{"generated":{"line":45,"column":0},"source":"js/test.js","original":{"line":49,"column":2}},{"generated":{"line":46,"column":0},"source":"js/test.js","original":{"line":50,"column":2}},{"generated":{"line":47,"column":0},"source":"js/test.js","original":{"line":51,"column":2}},{"name":"initStorage","generated":{"line":48,"column":0},"source":"js/test.js","original":{"line":53,"column":2}},{"name":"initStorage","generated":{"line":48,"column":2},"source":"js/test.js","original":{"line":53,"column":2}},{"generated":{"line":48,"column":13},"source":"js/test.js","original":{"line":53,"column":13}},{"generated":{"line":48,"column":16},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":48,"column":17},"source":"js/test.js","original":{"line":55,"column":2}},{"generated":{"line":49,"column":0},"source":"js/test.js","original":{"line":56,"column":2}},{"generated":{"line":50,"column":0},"source":"js/test.js","original":{"line":57,"column":2}},{"generated":{"line":51,"column":0},"source":"js/test.js","original":{"line":58,"column":2}},{"generated":{"line":52,"column":0},"source":"js/test.js","original":{"line":60,"column":2}},{"generated":{"line":53,"column":0},"source":"js/test.js","original":{"line":61,"column":2}},{"generated":{"line":54,"column":0},"source":"js/test.js","original":{"line":62,"column":2}},{"generated":{"line":55,"column":0},"source":"js/test.js","original":{"line":63,"column":2}},{"generated":{"line":56,"column":0},"source":"js/test.js","original":{"line":64,"column":2}},{"generated":{"line":57,"column":0},"source":"js/test.js","original":{"line":65,"column":2}},{"generated":{"line":58,"column":0},"source":"js/test.js","original":{"line":66,"column":2}},{"generated":{"line":59,"column":0},"source":"js/test.js","original":{"line":67,"column":2}},{"generated":{"line":60,"column":0},"source":"js/test.js","original":{"line":68,"column":2}},{"generated":{"line":61,"column":0},"source":"js/test.js","original":{"line":69,"column":2}},{"generated":{"line":62,"column":0},"source":"js/test.js","original":{"line":70,"column":2}},{"generated":{"line":63,"column":0},"source":"js/test.js","original":{"line":71,"column":2}},{"generated":{"line":64,"column":0},"source":"js/test.js","original":{"line":72,"column":2}},{"generated":{"line":65,"column":0},"source":"js/test.js","original":{"line":73,"column":2}},{"generated":{"line":66,"column":0},"source":"js/test.js","original":{"line":74,"column":2}},{"generated":{"line":67,"column":0},"source":"js/test.js","original":{"line":76,"column":2}},{"generated":{"line":68,"column":0},"source":"js/test.js","original":{"line":78,"column":2}},{"generated":{"line":69,"column":0},"source":"js/test.js","original":{"line":80,"column":2}},{"generated":{"line":70,"column":0},"source":"js/test.js","original":{"line":82,"column":2}},{"generated":{"line":71,"column":0},"source":"js/test.js","original":{"line":84,"column":2}},{"generated":{"line":72,"column":0},"source":"js/test.js","original":{"line":86,"column":2}},{"generated":{"line":73,"column":0},"source":"js/test.js","original":{"line":88,"column":0}},{"generated":{"line":74,"column":0},"source":"js/test.js","original":{"line":90,"column":0}},{"generated":{"line":75,"column":0},"source":"js/test.js","original":{"line":92,"column":0}},{"generated":{"line":76,"column":0},"source":"js/test.js","original":{"line":93,"column":0}},{"generated":{"line":77,"column":0},"source":"js/test.js","original":{"line":94,"column":0}},{"generated":{"line":78,"column":0},"source":"js/test.js","original":{"line":95,"column":0}},{"generated":{"line":79,"column":0},"source":"js/test.js","original":{"line":96,"column":0}},{"generated":{"line":80,"column":0},"source":"js/test.js","original":{"line":97,"column":0}},{"generated":{"line":81,"column":0},"source":"js/test.js","original":{"line":98,"column":0}},{"generated":{"line":82,"column":0},"source":"js/test.js","original":{"line":100,"column":0}},{"generated":{"line":83,"column":0},"source":"js/test.js","original":{"line":101,"column":0}},{"generated":{"line":84,"column":0},"source":"js/test.js","original":{"line":103,"column":0}},{"generated":{"line":85,"column":0},"source":"js/test.js","original":{"line":104,"column":0}},{"generated":{"line":86,"column":0},"source":"js/test.js","original":{"line":106,"column":0}},{"generated":{"line":87,"column":0},"source":"js/test.js","original":{"line":107,"column":0}},{"generated":{"line":88,"column":0},"source":"js/test.js","original":{"line":110,"column":0}},{"generated":{"line":89,"column":0},"source":"js/test.js","original":{"line":112,"column":0}},{"generated":{"line":90,"column":0},"source":"js/test.js","original":{"line":113,"column":0}},{"generated":{"line":91,"column":0},"source":"js/test.js","original":{"line":117,"column":0}},{"generated":{"line":92,"column":0},"source":"js/test.js","original":{"line":119,"column":2}},{"generated":{"line":93,"column":0},"source":"js/test.js","original":{"line":120,"column":2}},{"generated":{"line":94,"column":0},"source":"js/test.js","original":{"line":121,"column":2}},{"generated":{"line":95,"column":0},"source":"js/test.js","original":{"line":122,"column":2}},{"generated":{"line":96,"column":0},"source":"js/test.js","original":{"line":124,"column":2}},{"generated":{"line":97,"column":0},"source":"js/test.js","original":{"line":125,"column":2}},{"generated":{"line":98,"column":0},"source":"js/test.js","original":{"line":126,"column":2}},{"generated":{"line":99,"column":0},"source":"js/test.js","original":{"line":128,"column":2}},{"generated":{"line":100,"column":0},"source":"js/test.js","original":{"line":129,"column":2}},{"generated":{"line":101,"column":0},"source":"js/test.js","original":{"line":130,"column":2}},{"generated":{"line":102,"column":0},"source":"js/test.js","original":{"line":131,"column":2}},{"generated":{"line":103,"column":0},"source":"js/test.js","original":{"line":133,"column":2}},{"generated":{"line":104,"column":0},"source":"js/test.js","original":{"line":134,"column":2}},{"generated":{"line":105,"column":0},"source":"js/test.js","original":{"line":135,"column":2}},{"generated":{"line":106,"column":0},"source":"js/test.js","original":{"line":137,"column":2}},{"generated":{"line":107,"column":0},"source":"js/test.js","original":{"line":138,"column":2}},{"generated":{"line":108,"column":0},"source":"js/test.js","original":{"line":139,"column":2}},{"generated":{"line":109,"column":0},"source":"js/test.js","original":{"line":141,"column":2}},{"generated":{"line":110,"column":0},"source":"js/test.js","original":{"line":142,"column":2}},{"generated":{"line":111,"column":0},"source":"js/test.js","original":{"line":143,"column":2}},{"generated":{"line":112,"column":0},"source":"js/test.js","original":{"line":146,"column":2}},{"generated":{"line":113,"column":0},"source":"js/test.js","original":{"line":147,"column":0}},{"generated":{"line":114,"column":0},"source":"js/test.js","original":{"line":148,"column":0}},{"generated":{"line":115,"column":0},"source":"js/test.js","original":{"line":149,"column":0}},{"generated":{"line":116,"column":0},"source":"js/test.js","original":{"line":150,"column":0}},{"generated":{"line":117,"column":0},"source":"js/test.js","original":{"line":151,"column":0}},{"generated":{"line":118,"column":0},"source":"js/test.js","original":{"line":152,"column":0}},{"generated":{"line":119,"column":0},"source":"js/test.js","original":{"line":153,"column":0}},{"generated":{"line":120,"column":0},"source":"js/test.js","original":{"line":154,"column":0}},{"generated":{"line":121,"column":0},"source":"js/test.js","original":{"line":155,"column":0}},{"generated":{"line":122,"column":0},"source":"js/test.js","original":{"line":157,"column":0}},{"generated":{"line":123,"column":0},"source":"js/test.js","original":{"line":158,"column":0}},{"generated":{"line":124,"column":0},"source":"js/test.js","original":{"line":159,"column":0}},{"generated":{"line":125,"column":0},"source":"js/test.js","original":{"line":160,"column":0}},{"generated":{"line":126,"column":0},"source":"js/test.js","original":{"line":162,"column":0}},{"generated":{"line":127,"column":0},"source":"js/test.js","original":{"line":163,"column":0}},{"generated":{"line":128,"column":0},"source":"js/test.js","original":{"line":165,"column":0}},{"generated":{"line":129,"column":0},"source":"js/test.js","original":{"line":167,"column":0}},{"generated":{"line":130,"column":0},"source":"js/test.js","original":{"line":168,"column":0}},{"generated":{"line":131,"column":0},"source":"js/test.js","original":{"line":169,"column":0}},{"generated":{"line":132,"column":0},"source":"js/test.js","original":{"line":170,"column":0}},{"generated":{"line":133,"column":0},"source":"js/test.js","original":{"line":172,"column":0}},{"generated":{"line":134,"column":0},"source":"js/test.js","original":{"line":173,"column":0}},{"generated":{"line":135,"column":0},"source":"js/test.js","original":{"line":174,"column":0}},{"generated":{"line":136,"column":0},"source":"js/test.js","original":{"line":175,"column":0}},{"generated":{"line":137,"column":0},"source":"js/test.js","original":{"line":177,"column":0}},{"generated":{"line":138,"column":0},"source":"js/test.js","original":{"line":179,"column":0}},{"generated":{"line":139,"column":0},"source":"js/test.js","original":{"line":181,"column":0}},{"generated":{"line":140,"column":0},"source":"js/test.js","original":{"line":182,"column":0}},{"generated":{"line":141,"column":0},"source":"js/test.js","original":{"line":184,"column":0}},{"generated":{"line":142,"column":0},"source":"js/test.js","original":{"line":185,"column":0}},{"generated":{"line":143,"column":0},"source":"js/test.js","original":{"line":186,"column":0}},{"generated":{"line":144,"column":0},"source":"js/test.js","original":{"line":187,"column":0}},{"generated":{"line":145,"column":0},"source":"js/test.js","original":{"line":188,"column":0}},{"generated":{"line":146,"column":0},"source":"js/test.js","original":{"line":189,"column":0}},{"generated":{"line":147,"column":0},"source":"js/test.js","original":{"line":190,"column":0}},{"generated":{"line":148,"column":0},"source":"js/test.js","original":{"line":191,"column":0}},{"generated":{"line":149,"column":0},"source":"js/test.js","original":{"line":193,"column":0}},{"generated":{"line":150,"column":0},"source":"js/test.js","original":{"line":194,"column":0}},{"generated":{"line":151,"column":0},"source":"js/test.js","original":{"line":195,"column":0}},{"generated":{"line":152,"column":0},"source":"js/test.js","original":{"line":196,"column":0}},{"generated":{"line":153,"column":0},"source":"js/test.js","original":{"line":197,"column":0}},{"generated":{"line":154,"column":0},"source":"js/test.js","original":{"line":199,"column":0}},{"generated":{"line":155,"column":0},"source":"js/test.js","original":{"line":200,"column":0}},{"generated":{"line":156,"column":0},"source":"js/test.js","original":{"line":201,"column":0}},{"generated":{"line":157,"column":0},"source":"js/test.js","original":{"line":203,"column":0}},{"generated":{"line":158,"column":0},"source":"js/test.js","original":{"line":204,"column":0}},{"generated":{"line":159,"column":0},"source":"js/test.js","original":{"line":205,"column":0}},{"generated":{"line":160,"column":0},"source":"js/test.js","original":{"line":206,"column":0}},{"generated":{"line":161,"column":0},"source":"js/test.js","original":{"line":207,"column":0}},{"generated":{"line":162,"column":0},"source":"js/test.js","original":{"line":208,"column":0}},{"generated":{"line":163,"column":0},"source":"js/test.js","original":{"line":209,"column":0}},{"generated":{"line":164,"column":0},"source":"js/test.js","original":{"line":210,"column":0}},{"generated":{"line":165,"column":0},"source":"js/test.js","original":{"line":211,"column":0}},{"generated":{"line":166,"column":0},"source":"js/test.js","original":{"line":212,"column":0}},{"generated":{"line":167,"column":0},"source":"js/test.js","original":{"line":213,"column":0}},{"generated":{"line":168,"column":0},"source":"js/test.js","original":{"line":214,"column":0}},{"generated":{"line":169,"column":0},"source":"js/test.js","original":{"line":215,"column":0}},{"generated":{"line":170,"column":0},"source":"js/test.js","original":{"line":217,"column":0}},{"generated":{"line":171,"column":0},"source":"js/test.js","original":{"line":218,"column":0}},{"generated":{"line":172,"column":0},"source":"js/test.js","original":{"line":219,"column":2}},{"generated":{"line":173,"column":0},"source":"js/test.js","original":{"line":220,"column":2}},{"generated":{"line":174,"column":0},"source":"js/test.js","original":{"line":221,"column":0}},{"generated":{"line":175,"column":0},"source":"js/test.js","original":{"line":222,"column":2}},{"generated":{"line":176,"column":0},"source":"js/test.js","original":{"line":223,"column":2}},{"generated":{"line":177,"column":0},"source":"js/test.js","original":{"line":224,"column":2}},{"generated":{"line":178,"column":0},"source":"js/test.js","original":{"line":225,"column":0}},{"generated":{"line":179,"column":0},"source":"js/test.js","original":{"line":227,"column":0}},{"generated":{"line":180,"column":0},"source":"js/test.js","original":{"line":229,"column":0}},{"generated":{"line":181,"column":0},"source":"js/test.js","original":{"line":230,"column":0}},{"generated":{"line":182,"column":0},"source":"js/test.js","original":{"line":231,"column":2}},{"generated":{"line":183,"column":0},"source":"js/test.js","original":{"line":232,"column":2}},{"generated":{"line":184,"column":0},"source":"js/test.js","original":{"line":233,"column":0}},{"generated":{"line":185,"column":0},"source":"js/test.js","original":{"line":234,"column":2}},{"generated":{"line":186,"column":0},"source":"js/test.js","original":{"line":235,"column":2}},{"generated":{"line":187,"column":0},"source":"js/test.js","original":{"line":236,"column":2}},{"generated":{"line":188,"column":0},"source":"js/test.js","original":{"line":237,"column":0}},{"generated":{"line":189,"column":0},"source":"js/test.js","original":{"line":239,"column":0}},{"generated":{"line":190,"column":0},"source":"js/test.js","original":{"line":240,"column":0}},{"generated":{"line":191,"column":0},"source":"js/test.js","original":{"line":243,"column":0}},{"generated":{"line":192,"column":0},"source":"js/test.js","original":{"line":247,"column":0}},{"name":"localStorage","generated":{"line":194,"column":0},"source":"js/test.js","original":{"line":249,"column":0}},{"name":"localStorage","generated":{"line":194,"column":2},"source":"js/test.js","original":{"line":249,"column":0}},{"generated":{"line":194,"column":14},"source":"js/test.js","original":{"line":249,"column":12}},{"name":"clear","generated":{"line":194,"column":15},"source":"js/test.js","original":{"line":249,"column":13}},{"generated":{"line":194,"column":20},"source":"js/test.js","original":{"line":249,"column":0}},{"name":"initStorage","generated":{"line":195,"column":0},"source":"js/test.js","original":{"line":250,"column":0}},{"name":"initStorage","generated":{"line":195,"column":2},"source":"js/test.js","original":{"line":250,"column":0}},{"generated":{"line":195,"column":13},"source":"js/test.js","original":{"line":250,"column":11}},{"generated":{"line":196,"column":0},"source":"js/test.js","original":{"line":252,"column":0}},{"name":"products","generated":{"line":196,"column":6},"source":"js/test.js","original":{"line":252,"column":4}},{"generated":{"line":196,"column":14},"source":"js/test.js","original":{"line":252,"column":12}},{"generated":{"line":196,"column":17},"source":"js/test.js","original":{"line":252,"column":15}},{"generated":{"line":196,"column":19},"source":"js/test.js","original":{"line":252,"column":0}},{"generated":{"line":196,"column":20},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":196,"column":21},"source":"js/test.js","original":{"line":254,"column":0}},{"generated":{"line":198,"column":0},"source":"js/test.js","original":{"line":256,"column":0}},{"name":"prod","generated":{"line":198,"column":6},"source":"js/test.js","original":{"line":256,"column":4}},{"generated":{"line":198,"column":10},"source":"js/test.js","original":{"line":256,"column":8}},{"generated":{"line":198,"column":13},"source":"js/test.js","original":{"line":256,"column":11}},{"name":"id","generated":{"line":199,"column":0},"source":"js/test.js","original":{"line":257,"column":2}},{"name":"id","generated":{"line":199,"column":4},"source":"js/test.js","original":{"line":257,"column":2}},{"generated":{"line":199,"column":6},"source":"js/test.js","original":{"line":257,"column":4}},{"generated":{"line":199,"column":8},"source":"js/test.js","original":{"line":257,"column":6}},{"generated":{"line":199,"column":9},"source":"js/test.js","original":{"line":256,"column":11}},{"name":"name","generated":{"line":200,"column":0},"source":"js/test.js","original":{"line":258,"column":2}},{"name":"name","generated":{"line":200,"column":4},"source":"js/test.js","original":{"line":258,"column":2}},{"generated":{"line":200,"column":8},"source":"js/test.js","original":{"line":258,"column":6}},{"generated":{"line":200,"column":10},"source":"js/test.js","original":{"line":258,"column":8}},{"generated":{"line":200,"column":20},"source":"js/test.js","original":{"line":256,"column":11}},{"name":"price","generated":{"line":201,"column":0},"source":"js/test.js","original":{"line":259,"column":2}},{"name":"price","generated":{"line":201,"column":4},"source":"js/test.js","original":{"line":259,"column":2}},{"generated":{"line":201,"column":9},"source":"js/test.js","original":{"line":259,"column":7}},{"generated":{"line":201,"column":11},"source":"js/test.js","original":{"line":259,"column":9}},{"generated":{"line":201,"column":14},"source":"js/test.js","original":{"line":256,"column":11}},{"name":"picture","generated":{"line":202,"column":0},"source":"js/test.js","original":{"line":260,"column":2}},{"name":"picture","generated":{"line":202,"column":4},"source":"js/test.js","original":{"line":260,"column":2}},{"generated":{"line":202,"column":11},"source":"js/test.js","original":{"line":260,"column":9}},{"generated":{"line":202,"column":13},"source":"js/test.js","original":{"line":260,"column":10}},{"generated":{"line":202,"column":14},"source":"js/test.js","original":{"line":260,"column":11}},{"generated":{"line":202,"column":24},"source":"js/test.js","original":{"line":260,"column":10}},{"generated":{"line":202,"column":26},"source":"js/test.js","original":{"line":260,"column":23}},{"generated":{"line":202,"column":36},"source":"js/test.js","original":{"line":260,"column":10}},{"generated":{"line":202,"column":38},"source":"js/test.js","original":{"line":260,"column":35}},{"generated":{"line":202,"column":48},"source":"js/test.js","original":{"line":260,"column":10}},{"generated":{"line":202,"column":49},"source":"js/test.js","original":{"line":256,"column":11}},{"name":"amount","generated":{"line":203,"column":0},"source":"js/test.js","original":{"line":261,"column":2}},{"name":"amount","generated":{"line":203,"column":4},"source":"js/test.js","original":{"line":261,"column":2}},{"generated":{"line":203,"column":10},"source":"js/test.js","original":{"line":261,"column":8}},{"generated":{"line":203,"column":12},"source":"js/test.js","original":{"line":261,"column":10}},{"generated":{"line":204,"column":0},"source":"js/test.js","original":{"line":256,"column":11}},{"generated":{"line":204,"column":3},"source":"js/test.js","original":{"line":256,"column":0}},{"name":"products","generated":{"line":205,"column":0},"source":"js/test.js","original":{"line":264,"column":0}},{"name":"products","generated":{"line":205,"column":2},"source":"js/test.js","original":{"line":264,"column":0}},{"generated":{"line":205,"column":10},"source":"js/test.js","original":{"line":264,"column":8}},{"name":"push","generated":{"line":205,"column":11},"source":"js/test.js","original":{"line":264,"column":9}},{"generated":{"line":205,"column":15},"source":"js/test.js","original":{"line":264,"column":0}},{"generated":{"line":205,"column":16},"source":"js/test.js","original":{"line":264,"column":14}},{"name":"Product","generated":{"line":205,"column":20},"source":"js/test.js","original":{"line":264,"column":18}},{"generated":{"line":205,"column":27},"source":"js/test.js","original":{"line":264,"column":14}},{"name":"prod","generated":{"line":205,"column":28},"source":"js/test.js","original":{"line":264,"column":26}},{"generated":{"line":205,"column":32},"source":"js/test.js","original":{"line":264,"column":30}},{"name":"id","generated":{"line":205,"column":33},"source":"js/test.js","original":{"line":264,"column":31}},{"generated":{"line":205,"column":35},"source":"js/test.js","original":{"line":264,"column":14}},{"name":"prod","generated":{"line":205,"column":37},"source":"js/test.js","original":{"line":264,"column":34}},{"generated":{"line":205,"column":41},"source":"js/test.js","original":{"line":264,"column":38}},{"name":"name","generated":{"line":205,"column":42},"source":"js/test.js","original":{"line":264,"column":39}},{"generated":{"line":205,"column":46},"source":"js/test.js","original":{"line":264,"column":14}},{"name":"prod","generated":{"line":205,"column":48},"source":"js/test.js","original":{"line":264,"column":44}},{"generated":{"line":205,"column":52},"source":"js/test.js","original":{"line":264,"column":48}},{"name":"price","generated":{"line":205,"column":53},"source":"js/test.js","original":{"line":264,"column":49}},{"generated":{"line":205,"column":58},"source":"js/test.js","original":{"line":264,"column":14}},{"name":"prod","generated":{"line":205,"column":60},"source":"js/test.js","original":{"line":264,"column":55}},{"generated":{"line":205,"column":64},"source":"js/test.js","original":{"line":264,"column":59}},{"name":"picture","generated":{"line":205,"column":65},"source":"js/test.js","original":{"line":264,"column":60}},{"generated":{"line":205,"column":72},"source":"js/test.js","original":{"line":264,"column":14}},{"name":"prod","generated":{"line":205,"column":74},"source":"js/test.js","original":{"line":264,"column":68}},{"generated":{"line":205,"column":78},"source":"js/test.js","original":{"line":264,"column":72}},{"name":"amount","generated":{"line":205,"column":79},"source":"js/test.js","original":{"line":264,"column":73}},{"generated":{"line":205,"column":85},"source":"js/test.js","original":{"line":264,"column":14}},{"generated":{"line":205,"column":86},"source":"js/test.js","original":{"line":264,"column":0}},{"generated":{"line":205,"column":88},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":205,"column":89},"source":"js/test.js","original":{"line":266,"column":0}},{"name":"window","generated":{"line":207,"column":0},"source":"js/test.js","original":{"line":268,"column":0}},{"name":"window","generated":{"line":207,"column":2},"source":"js/test.js","original":{"line":268,"column":0}},{"generated":{"line":207,"column":8},"source":"js/test.js","original":{"line":268,"column":6}},{"name":"localStorage","generated":{"line":207,"column":9},"source":"js/test.js","original":{"line":268,"column":7}},{"generated":{"line":207,"column":21},"source":"js/test.js","original":{"line":268,"column":0}},{"name":"setItem","generated":{"line":207,"column":22},"source":"js/test.js","original":{"line":268,"column":20}},{"generated":{"line":207,"column":29},"source":"js/test.js","original":{"line":268,"column":0}},{"generated":{"line":207,"column":30},"source":"js/test.js","original":{"line":268,"column":28}},{"generated":{"line":207,"column":38},"source":"js/test.js","original":{"line":268,"column":0}},{"name":"JSON","generated":{"line":207,"column":40},"source":"js/test.js","original":{"line":268,"column":37}},{"generated":{"line":207,"column":44},"source":"js/test.js","original":{"line":268,"column":41}},{"name":"stringify","generated":{"line":207,"column":45},"source":"js/test.js","original":{"line":268,"column":42}},{"generated":{"line":207,"column":54},"source":"js/test.js","original":{"line":268,"column":37}},{"name":"products","generated":{"line":207,"column":55},"source":"js/test.js","original":{"line":268,"column":52}},{"generated":{"line":207,"column":63},"source":"js/test.js","original":{"line":268,"column":37}},{"generated":{"line":207,"column":64},"source":"js/test.js","original":{"line":268,"column":0}},{"generated":{"line":209,"column":0},"source":"js/test.js","original":{"line":270,"column":0}},{"name":"getProducts","generated":{"line":209,"column":11},"source":"js/test.js","original":{"line":270,"column":9}},{"generated":{"line":209,"column":22},"source":"js/test.js","original":{"line":270,"column":0}},{"generated":{"line":209,"column":25},"source":"js/test.js","original":{"line":270,"column":23}},{"generated":{"line":210,"column":0},"source":"js/test.js","original":{"line":271,"column":2}},{"name":"JSON","generated":{"line":210,"column":11},"source":"js/test.js","original":{"line":271,"column":9}},{"generated":{"line":210,"column":15},"source":"js/test.js","original":{"line":271,"column":13}},{"name":"parse","generated":{"line":210,"column":16},"source":"js/test.js","original":{"line":271,"column":14}},{"generated":{"line":210,"column":21},"source":"js/test.js","original":{"line":271,"column":9}},{"name":"window","generated":{"line":210,"column":22},"source":"js/test.js","original":{"line":271,"column":20}},{"generated":{"line":210,"column":28},"source":"js/test.js","original":{"line":271,"column":26}},{"name":"localStorage","generated":{"line":210,"column":29},"source":"js/test.js","original":{"line":271,"column":27}},{"generated":{"line":210,"column":41},"source":"js/test.js","original":{"line":271,"column":20}},{"name":"getItem","generated":{"line":210,"column":42},"source":"js/test.js","original":{"line":271,"column":40}},{"generated":{"line":210,"column":49},"source":"js/test.js","original":{"line":271,"column":20}},{"generated":{"line":210,"column":50},"source":"js/test.js","original":{"line":271,"column":48}},{"generated":{"line":210,"column":58},"source":"js/test.js","original":{"line":271,"column":20}},{"generated":{"line":210,"column":59},"source":"js/test.js","original":{"line":271,"column":9}},{"generated":{"line":210,"column":60},"source":"js/test.js","original":{"line":271,"column":2}},{"generated":{"line":211,"column":0},"source":"js/test.js","original":{"line":272,"column":1}},{"generated":{"line":213,"column":0},"source":"js/test.js","original":{"line":274,"column":0}},{"name":"tmpProducts","generated":{"line":213,"column":6},"source":"js/test.js","original":{"line":274,"column":4}},{"generated":{"line":213,"column":17},"source":"js/test.js","original":{"line":274,"column":15}},{"name":"getProducts","generated":{"line":213,"column":20},"source":"js/test.js","original":{"line":274,"column":18}},{"generated":{"line":213,"column":31},"source":"js/test.js","original":{"line":274,"column":29}},{"generated":{"line":213,"column":33},"source":"js/test.js","original":{"line":274,"column":0}},{"name":"console","generated":{"line":214,"column":0},"source":"js/test.js","original":{"line":276,"column":0}},{"name":"console","generated":{"line":214,"column":2},"source":"js/test.js","original":{"line":276,"column":0}},{"generated":{"line":214,"column":9},"source":"js/test.js","original":{"line":276,"column":7}},{"name":"log","generated":{"line":214,"column":10},"source":"js/test.js","original":{"line":276,"column":8}},{"generated":{"line":214,"column":13},"source":"js/test.js","original":{"line":276,"column":0}},{"generated":{"line":214,"column":14},"source":"js/test.js","original":{"line":276,"column":12}},{"generated":{"line":214,"column":29},"source":"js/test.js","original":{"line":276,"column":0}},{"name":"tmpProducts","generated":{"line":214,"column":31},"source":"js/test.js","original":{"line":276,"column":29}},{"generated":{"line":214,"column":42},"source":"js/test.js","original":{"line":276,"column":0}},{"generated":{"line":214,"column":44},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":214,"column":45},"source":"js/test.js","original":{"line":278,"column":0}},{"generated":{"line":215,"column":0},"source":"js/test.js","original":{"line":280,"column":0}},{"generated":{"line":217,"column":0},"source":"js/test.js","original":{"line":282,"column":0}},{"name":"id","generated":{"line":217,"column":6},"source":"js/test.js","original":{"line":282,"column":4}},{"generated":{"line":217,"column":8},"source":"js/test.js","original":{"line":282,"column":6}},{"generated":{"line":217,"column":11},"source":"js/test.js","original":{"line":282,"column":9}},{"generated":{"line":217,"column":12},"source":"js/test.js","original":{"line":282,"column":0}},{"generated":{"line":218,"column":0},"source":"js/test.js","original":{"line":284,"column":0}},{"name":"exist","generated":{"line":218,"column":6},"source":"js/test.js","original":{"line":284,"column":4}},{"generated":{"line":218,"column":11},"source":"js/test.js","original":{"line":284,"column":9}},{"name":"tmpProducts","generated":{"line":218,"column":14},"source":"js/test.js","original":{"line":284,"column":12}},{"generated":{"line":218,"column":25},"source":"js/test.js","original":{"line":284,"column":23}},{"name":"some","generated":{"line":218,"column":26},"source":"js/test.js","original":{"line":284,"column":24}},{"generated":{"line":218,"column":30},"source":"js/test.js","original":{"line":284,"column":12}},{"generated":{"line":218,"column":31},"source":"js/test.js","original":{"line":284,"column":29}},{"name":"elem","generated":{"line":218,"column":41},"source":"js/test.js","original":{"line":284,"column":29}},{"generated":{"line":218,"column":45},"source":"js/test.js","original":{"line":284,"column":33}},{"generated":{"line":218,"column":47},"source":"js/test.js","original":{"line":284,"column":37}},{"generated":{"line":219,"column":0},"source":"js/test.js","original":{"line":285,"column":2}},{"name":"elem","generated":{"line":219,"column":11},"source":"js/test.js","original":{"line":285,"column":9}},{"generated":{"line":219,"column":15},"source":"js/test.js","original":{"line":285,"column":13}},{"name":"id","generated":{"line":219,"column":16},"source":"js/test.js","original":{"line":285,"column":14}},{"generated":{"line":219,"column":18},"source":"js/test.js","original":{"line":285,"column":9}},{"name":"id","generated":{"line":219,"column":23},"source":"js/test.js","original":{"line":285,"column":21}},{"generated":{"line":219,"column":25},"source":"js/test.js","original":{"line":285,"column":2}},{"generated":{"line":220,"column":0},"source":"js/test.js","original":{"line":286,"column":1}},{"generated":{"line":220,"column":3},"source":"js/test.js","original":{"line":284,"column":12}},{"generated":{"line":220,"column":4},"source":"js/test.js","original":{"line":284,"column":0}},{"generated":{"line":220,"column":5},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":220,"column":6},"source":"js/test.js","original":{"line":288,"column":0}},{"name":"console","generated":{"line":222,"column":0},"source":"js/test.js","original":{"line":290,"column":0}},{"name":"console","generated":{"line":222,"column":2},"source":"js/test.js","original":{"line":290,"column":0}},{"generated":{"line":222,"column":9},"source":"js/test.js","original":{"line":290,"column":7}},{"name":"log","generated":{"line":222,"column":10},"source":"js/test.js","original":{"line":290,"column":8}},{"generated":{"line":222,"column":13},"source":"js/test.js","original":{"line":290,"column":0}},{"name":"exist","generated":{"line":222,"column":14},"source":"js/test.js","original":{"line":290,"column":12}},{"generated":{"line":222,"column":19},"source":"js/test.js","original":{"line":290,"column":0}},{"generated":{"line":222,"column":21},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":222,"column":22},"source":"js/test.js","original":{"line":292,"column":0}},{"generated":{"line":223,"column":0},"source":"js/test.js","original":{"line":294,"column":0}},{"generated":{"line":224,"column":0},"source":"js/test.js","original":{"line":295,"column":0}},{"generated":{"line":225,"column":0},"source":"js/test.js","original":{"line":296,"column":0}},{"generated":{"line":226,"column":0},"source":"js/test.js","original":{"line":297,"column":0}},{"generated":{"line":227,"column":0},"source":"js/test.js","original":{"line":298,"column":0}},{"generated":{"line":228,"column":0},"source":"js/test.js","original":{"line":300,"column":0}},{"generated":{"line":229,"column":0},"source":"js/test.js","original":{"line":302,"column":0}},{"name":"console","generated":{"line":231,"column":0},"source":"js/test.js","original":{"line":303,"column":0}},{"name":"console","generated":{"line":231,"column":2},"source":"js/test.js","original":{"line":303,"column":0}},{"generated":{"line":231,"column":9},"source":"js/test.js","original":{"line":303,"column":7}},{"name":"log","generated":{"line":231,"column":10},"source":"js/test.js","original":{"line":303,"column":8}},{"generated":{"line":231,"column":13},"source":"js/test.js","original":{"line":303,"column":0}},{"name":"tmpProducts","generated":{"line":231,"column":14},"source":"js/test.js","original":{"line":303,"column":12}},{"generated":{"line":231,"column":25},"source":"js/test.js","original":{"line":303,"column":0}},{"generated":{"line":231,"column":27},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":231,"column":28},"source":"js/test.js","original":{"line":305,"column":0}},{"generated":{"line":232,"column":0},"source":"js/test.js","original":{"line":307,"column":0}},{"generated":{"line":234,"column":0},"source":"js/test.js","original":{"line":309,"column":0}},{"name":"isBiggerThan10","generated":{"line":234,"column":11},"source":"js/test.js","original":{"line":309,"column":9}},{"generated":{"line":234,"column":25},"source":"js/test.js","original":{"line":309,"column":0}},{"name":"element","generated":{"line":234,"column":26},"source":"js/test.js","original":{"line":309,"column":24}},{"generated":{"line":234,"column":33},"source":"js/test.js","original":{"line":309,"column":0}},{"name":"index","generated":{"line":234,"column":35},"source":"js/test.js","original":{"line":309,"column":33}},{"generated":{"line":234,"column":40},"source":"js/test.js","original":{"line":309,"column":0}},{"name":"array","generated":{"line":234,"column":42},"source":"js/test.js","original":{"line":309,"column":40}},{"generated":{"line":234,"column":47},"source":"js/test.js","original":{"line":309,"column":0}},{"generated":{"line":234,"column":49},"source":"js/test.js","original":{"line":309,"column":47}},{"generated":{"line":235,"column":0},"source":"js/test.js","original":{"line":310,"column":2}},{"name":"element","generated":{"line":235,"column":11},"source":"js/test.js","original":{"line":310,"column":9}},{"generated":{"line":235,"column":18},"source":"js/test.js","original":{"line":310,"column":16}},{"generated":{"line":235,"column":21},"source":"js/test.js","original":{"line":310,"column":19}},{"generated":{"line":235,"column":23},"source":"js/test.js","original":{"line":310,"column":2}},{"generated":{"line":236,"column":0},"source":"js/test.js","original":{"line":311,"column":1}},{"generated":{"line":238,"column":0},"source":"js/test.js","original":{"line":312,"column":0}},{"generated":{"line":238,"column":3},"source":"js/test.js","original":{"line":312,"column":1}},{"generated":{"line":238,"column":4},"source":"js/test.js","original":{"line":312,"column":0}},{"generated":{"line":238,"column":6},"source":"js/test.js","original":{"line":312,"column":4}},{"generated":{"line":238,"column":7},"source":"js/test.js","original":{"line":312,"column":0}},{"generated":{"line":238,"column":9},"source":"js/test.js","original":{"line":312,"column":7}},{"generated":{"line":238,"column":10},"source":"js/test.js","original":{"line":312,"column":0}},{"generated":{"line":238,"column":12},"source":"js/test.js","original":{"line":312,"column":10}},{"generated":{"line":238,"column":13},"source":"js/test.js","original":{"line":312,"column":0}},{"generated":{"line":238,"column":15},"source":"js/test.js","original":{"line":312,"column":13}},{"generated":{"line":238,"column":16},"source":"js/test.js","original":{"line":312,"column":0}},{"name":"some","generated":{"line":238,"column":18},"source":"js/test.js","original":{"line":312,"column":16}},{"generated":{"line":238,"column":22},"source":"js/test.js","original":{"line":312,"column":0}},{"name":"isBiggerThan10","generated":{"line":238,"column":23},"source":"js/test.js","original":{"line":312,"column":21}},{"generated":{"line":238,"column":37},"source":"js/test.js","original":{"line":312,"column":0}},{"generated":{"line":238,"column":39},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":238,"column":40},"source":"js/test.js","original":{"line":312,"column":39}},{"generated":{"line":240,"column":0},"source":"js/test.js","original":{"line":313,"column":0}},{"generated":{"line":240,"column":3},"source":"js/test.js","original":{"line":313,"column":1}},{"generated":{"line":240,"column":5},"source":"js/test.js","original":{"line":313,"column":0}},{"generated":{"line":240,"column":7},"source":"js/test.js","original":{"line":313,"column":5}},{"generated":{"line":240,"column":8},"source":"js/test.js","original":{"line":313,"column":0}},{"generated":{"line":240,"column":10},"source":"js/test.js","original":{"line":313,"column":8}},{"generated":{"line":240,"column":11},"source":"js/test.js","original":{"line":313,"column":0}},{"generated":{"line":240,"column":13},"source":"js/test.js","original":{"line":313,"column":11}},{"generated":{"line":240,"column":14},"source":"js/test.js","original":{"line":313,"column":0}},{"generated":{"line":240,"column":16},"source":"js/test.js","original":{"line":313,"column":14}},{"generated":{"line":240,"column":17},"source":"js/test.js","original":{"line":313,"column":0}},{"name":"some","generated":{"line":240,"column":19},"source":"js/test.js","original":{"line":313,"column":17}},{"generated":{"line":240,"column":23},"source":"js/test.js","original":{"line":313,"column":0}},{"name":"isBiggerThan10","generated":{"line":240,"column":24},"source":"js/test.js","original":{"line":313,"column":22}},{"generated":{"line":240,"column":38},"source":"js/test.js","original":{"line":313,"column":0}},{"generated":{"line":240,"column":40},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":240,"column":41},"source":"js/test.js","original":{"line":313,"column":39}},{"generated":{"line":241,"column":0},"source":"js/test.js","original":{"line":315,"column":0}},{"generated":{"line":243,"column":0},"source":"js/test.js","original":{"line":316,"column":0}},{"generated":{"line":243,"column":3},"source":"js/test.js","original":{"line":316,"column":1}},{"generated":{"line":243,"column":4},"source":"js/test.js","original":{"line":316,"column":0}},{"generated":{"line":243,"column":6},"source":"js/test.js","original":{"line":316,"column":4}},{"generated":{"line":243,"column":7},"source":"js/test.js","original":{"line":316,"column":0}},{"generated":{"line":243,"column":9},"source":"js/test.js","original":{"line":316,"column":7}},{"generated":{"line":243,"column":10},"source":"js/test.js","original":{"line":316,"column":0}},{"generated":{"line":243,"column":12},"source":"js/test.js","original":{"line":316,"column":10}},{"generated":{"line":243,"column":13},"source":"js/test.js","original":{"line":316,"column":0}},{"generated":{"line":243,"column":15},"source":"js/test.js","original":{"line":316,"column":13}},{"generated":{"line":243,"column":16},"source":"js/test.js","original":{"line":316,"column":0}},{"name":"some","generated":{"line":243,"column":18},"source":"js/test.js","original":{"line":316,"column":16}},{"generated":{"line":243,"column":22},"source":"js/test.js","original":{"line":316,"column":0}},{"generated":{"line":243,"column":23},"source":"js/test.js","original":{"line":316,"column":21}},{"name":"elem","generated":{"line":243,"column":33},"source":"js/test.js","original":{"line":316,"column":21}},{"generated":{"line":243,"column":37},"source":"js/test.js","original":{"line":316,"column":25}},{"generated":{"line":244,"column":0},"source":"js/test.js","original":{"line":316,"column":25}},{"name":"elem","generated":{"line":244,"column":11},"source":"js/test.js","original":{"line":316,"column":29}},{"generated":{"line":244,"column":15},"source":"js/test.js","original":{"line":316,"column":33}},{"generated":{"line":244,"column":18},"source":"js/test.js","original":{"line":316,"column":36}},{"generated":{"line":244,"column":20},"source":"js/test.js","original":{"line":316,"column":25}},{"generated":{"line":245,"column":0},"source":"js/test.js","original":{"line":316,"column":25}},{"generated":{"line":245,"column":3},"source":"js/test.js","original":{"line":316,"column":0}},{"generated":{"line":245,"column":5},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":245,"column":6},"source":"js/test.js","original":{"line":316,"column":42}},{"generated":{"line":247,"column":0},"source":"js/test.js","original":{"line":317,"column":0}},{"generated":{"line":247,"column":3},"source":"js/test.js","original":{"line":317,"column":1}},{"generated":{"line":247,"column":5},"source":"js/test.js","original":{"line":317,"column":0}},{"generated":{"line":247,"column":7},"source":"js/test.js","original":{"line":317,"column":5}},{"generated":{"line":247,"column":8},"source":"js/test.js","original":{"line":317,"column":0}},{"generated":{"line":247,"column":10},"source":"js/test.js","original":{"line":317,"column":8}},{"generated":{"line":247,"column":11},"source":"js/test.js","original":{"line":317,"column":0}},{"generated":{"line":247,"column":13},"source":"js/test.js","original":{"line":317,"column":11}},{"generated":{"line":247,"column":14},"source":"js/test.js","original":{"line":317,"column":0}},{"generated":{"line":247,"column":16},"source":"js/test.js","original":{"line":317,"column":14}},{"generated":{"line":247,"column":17},"source":"js/test.js","original":{"line":317,"column":0}},{"name":"some","generated":{"line":247,"column":19},"source":"js/test.js","original":{"line":317,"column":17}},{"generated":{"line":247,"column":23},"source":"js/test.js","original":{"line":317,"column":0}},{"generated":{"line":247,"column":24},"source":"js/test.js","original":{"line":317,"column":22}},{"name":"elem","generated":{"line":247,"column":34},"source":"js/test.js","original":{"line":317,"column":22}},{"generated":{"line":247,"column":38},"source":"js/test.js","original":{"line":317,"column":26}},{"generated":{"line":248,"column":0},"source":"js/test.js","original":{"line":317,"column":26}},{"name":"elem","generated":{"line":248,"column":11},"source":"js/test.js","original":{"line":317,"column":30}},{"generated":{"line":248,"column":15},"source":"js/test.js","original":{"line":317,"column":34}},{"generated":{"line":248,"column":18},"source":"js/test.js","original":{"line":317,"column":37}},{"generated":{"line":248,"column":20},"source":"js/test.js","original":{"line":317,"column":26}},{"generated":{"line":249,"column":0},"source":"js/test.js","original":{"line":317,"column":26}},{"generated":{"line":249,"column":3},"source":"js/test.js","original":{"line":317,"column":0}},{"generated":{"line":249,"column":5},"source":"js/test.js","original":{"line":42,"column":12}},{"generated":{"line":249,"column":6},"source":"js/test.js","original":{"line":317,"column":42}},{"generated":{"line":250,"column":0},"source":"js/test.js","original":{"line":320,"column":0}},{"generated":{"line":251,"column":0},"source":"js/test.js","original":{"line":321,"column":0}},{"generated":{"line":252,"column":0},"source":"js/test.js","original":{"line":322,"column":0}},{"generated":{"line":253,"column":0},"source":"js/test.js","original":{"line":323,"column":0}},{"generated":{"line":254,"column":0},"source":"js/test.js","original":{"line":324,"column":0}},{"generated":{"line":255,"column":0},"source":"js/test.js","original":{"line":325,"column":0}},{"generated":{"line":256,"column":0},"source":"js/test.js","original":{"line":326,"column":0}},{"generated":{"line":257,"column":0},"source":"js/test.js","original":{"line":327,"column":0}},{"generated":{"line":258,"column":0},"source":"js/test.js","original":{"line":328,"column":0}},{"generated":{"line":259,"column":0},"source":"js/test.js","original":{"line":329,"column":0}},{"generated":{"line":260,"column":0},"source":"js/test.js","original":{"line":330,"column":0}},{"generated":{"line":261,"column":0},"source":"js/test.js","original":{"line":331,"column":0}},{"generated":{"line":262,"column":0},"source":"js/test.js","original":{"line":332,"column":0}},{"generated":{"line":263,"column":0},"source":"js/test.js","original":{"line":333,"column":0}},{"generated":{"line":264,"column":0},"source":"js/test.js","original":{"line":334,"column":0}},{"generated":{"line":265,"column":0},"source":"js/test.js","original":{"line":335,"column":0}},{"generated":{"line":266,"column":0},"source":"js/test.js","original":{"line":336,"column":0}},{"generated":{"line":267,"column":0},"source":"js/test.js","original":{"line":337,"column":0}},{"generated":{"line":268,"column":0},"source":"js/test.js","original":{"line":340,"column":0}},{"generated":{"line":269,"column":0},"source":"js/test.js","original":{"line":342,"column":0}},{"generated":{"line":270,"column":0},"source":"js/test.js","original":{"line":345,"column":0}},{"generated":{"line":271,"column":0},"source":"js/test.js","original":{"line":348,"column":0}},{"generated":{"line":272,"column":0},"source":"js/test.js","original":{"line":349,"column":0}},{"generated":{"line":273,"column":0},"source":"js/test.js","original":{"line":350,"column":0}},{"generated":{"line":274,"column":0},"source":"js/test.js","original":{"line":351,"column":0}},{"generated":{"line":275,"column":0},"source":"js/test.js","original":{"line":352,"column":0}},{"generated":{"line":276,"column":0},"source":"js/test.js","original":{"line":353,"column":0}},{"generated":{"line":277,"column":0},"source":"js/test.js","original":{"line":354,"column":0}},{"generated":{"line":278,"column":0},"source":"js/test.js","original":{"line":355,"column":0}},{"generated":{"line":279,"column":0},"source":"js/test.js","original":{"line":358,"column":0}},{"generated":{"line":280,"column":0},"source":"js/test.js","original":{"line":360,"column":0}},{"generated":{"line":281,"column":0},"source":"js/test.js","original":{"line":362,"column":0}},{"generated":{"line":282,"column":0},"source":"js/test.js","original":{"line":364,"column":0}},{"generated":{"line":283,"column":0},"source":"js/test.js","original":{"line":366,"column":0}},{"generated":{"line":284,"column":0},"source":"js/test.js","original":{"line":368,"column":0}},{"generated":{"line":285,"column":0},"source":"js/test.js","original":{"line":369,"column":0}},{"generated":{"line":286,"column":0},"source":"js/test.js","original":{"line":371,"column":0}},{"generated":{"line":287,"column":0},"source":"js/test.js","original":{"line":372,"column":0}},{"generated":{"line":288,"column":0},"source":"js/test.js","original":{"line":373,"column":0}},{"generated":{"line":289,"column":0},"source":"js/test.js","original":{"line":374,"column":0}},{"generated":{"line":290,"column":0},"source":"js/test.js","original":{"line":375,"column":0}},{"generated":{"line":291,"column":0},"source":"js/test.js","original":{"line":376,"column":0}},{"generated":{"line":292,"column":0},"source":"js/test.js","original":{"line":377,"column":0}},{"generated":{"line":293,"column":0},"source":"js/test.js","original":{"line":378,"column":0}},{"generated":{"line":294,"column":0},"source":"js/test.js","original":{"line":379,"column":0}},{"generated":{"line":295,"column":0},"source":"js/test.js","original":{"line":381,"column":0}},{"generated":{"line":296,"column":0},"source":"js/test.js","original":{"line":382,"column":0}},{"generated":{"line":297,"column":0},"source":"js/test.js","original":{"line":384,"column":0}},{"generated":{"line":298,"column":0},"source":"js/test.js","original":{"line":386,"column":0}},{"generated":{"line":299,"column":0},"source":"js/test.js","original":{"line":387,"column":0}},{"generated":{"line":300,"column":0},"source":"js/test.js","original":{"line":389,"column":0}},{"generated":{"line":301,"column":0},"source":"js/test.js","original":{"line":390,"column":1}},{"generated":{"line":301,"column":1},"source":"js/test.js","original":{"line":42,"column":0}}],"sources":{"js/test.js":"'use strict';\n\n// function initStorage() {\n//   window.localStorage.getItem(\"basket\") ?\n//     window.localStorage.getItem(\"basket\") :\n//     window.localStorage.setItem(\"basket\", '');\n// }\n\nfunction initStorage() {\n  window.localStorage.getItem(\"basket\") ?\n    window.localStorage.getItem(\"basket\") :\n    window.localStorage.setItem(\"basket\", JSON.stringify([]));\n}\n\nconst data = [{\n  id: 0,\n  name: \"Cool Cat\",\n  price: 77,\n  picture: [\"cat1.jpg\", \"cat4.jpg\", \"cat5.jpg\", \"cat6.jpg\", \"cat7.jpg\"],\n  subtitle: [\"Mama mia!\", \"Je t'adore\", \"Beach cat\", \"Tropical cat\", \"White building cat\"],\n  description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Possimus dignissimos, maxime ea excepturi veritatis itaque.\"\n},\n{\n  id: 1,\n  name: \"Black Cat\",\n  price: 66,\n  picture: [\"cat2.jpg\", \"cat4.jpg\", \"cat5.jpg\", \"cat6.jpg\", \"cat7.jpg\"],\n  subtitle: [\"Tropical cat\", \"Mama mia!\", \"Je t'adore\", \"Beach cat\", \"White building cat\"],\n  description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Possimus dignissimos, maxime ea excepturi veritatis itaque.\"\n},];\n\nclass Product {\n  constructor(id, name, price, picture, amount){\n        this.id = id;\n        this.name = name;\n        this.price = price;\n        this.picture = picture;\n        this.amount = amount;\n  }\n}\n\n(function() {\n\n  // Проверить, поддерживает ли браузер API sessionStorage и localStorage можно с помощью следующей строки:\n  // if (window.sessionStorage && window.localStorage) {\n  //   // объекты sessionStorage и localstorage поддерживаются\n  //   console.log('объекты sessionStorage и localstorage поддерживаются');\n  // } else {\n  //   // объекты sessionStorage и localstorage не поддерживаются\n  //   console.log('объекты sessionStorage и localstorage не поддерживаются');\n  // }\n\n  initStorage();\n  \n  // if (localStorage) {\n  //     console.log(\"It's basket storage\");\n  //     console.log('localStorage.length = ', localStorage.length);\n  //     console.log('localStorage.basket.length = ', localStorage.basket.length);\n      \n  //     // LocalStorage имеет простой API - всего 5 метода.\n  //     // Storage.key(Ключ)  // Получить имя n-ного ключа в Storage\n  //     console.log('Получить имя n-ного ключа в Storage: ', localStorage.key(0));\n  //     // Storage.getItem(Ключ)  // Получить значение ключа.\n  //     console.log('Получить имя n-ного ключа в Storage: ', localStorage.getItem('basket'));\n  //     // Storage.setItem(Ключ, Значение)  // Добавление  ключа в Storage или обновление его значение, если ключ уже существовал.\n  //     localStorage.setItem('basket', 'true');\n  //     console.log('Добавление  ключа в Storage или обновление его значение, если ключ уже существовал: ', localStorage.getItem('basket'));\n  //     // Storage.removeItem(Ключ)   // Удалит этот ключ из Storage.\n  //     localStorage.removeItem('basket');\n  //     console.log('Удалит этот ключ из Storage: ', localStorage.getItem('basket'));\n  //     // Storage.clear()   // При вызове, метод удалит все ключи из Storage.\n  //     localStorage.clear();\n  //     console.log('localStorage.length = ', localStorage.length);\n  // }\n\n  // let stringifyData = JSON.stringify(data);\n  \n  // console.log(stringifyData);\n    \n  // let parseData = JSON.parse(stringifyData);\n  \n  // console.log(parseData[1] );\n  \n  // console.log(parseData[1]['picture'] );\n  \n  // console.log(parseData[1]['picture'][1] );\n  \n// ---------------------------------\n\n// создадим объект\n\n// let product = {\n//   id: 1, \n//   name: 'Cat', \n//   price: 555, \n//   picture:['cat1.jpg', 'cat2.jpg', 'cat3.jpg'],\n//   amount: 1\n// };\n\n// let serialProduct = JSON.stringify(product); // сериализуем product\n// console.log('serialProduct: ', serialProduct);\n\n// localStorage.setItem(\"basket\", serialProduct); // запишем serialProduct в хранилище по ключу \"basket\"\n// console.log('localStorage.basket: ', localStorage.basket);\n\n// let returnProduct = JSON.parse(localStorage.getItem(\"basket\")) // парсим basket обратно в объект\n// console.log('returnProduct: ', returnProduct);\n\n  \n// let tmpProducts = new Product(id, name, price, picture, 1);\n  \n// window.localStorage.setItem(\"basket\",JSON.stringify(tmpProducts));\n// console.log('localStorage.basket: ', localStorage.basket);\n\n\n\n// =============== Стрелочные функции =========================\n\n  // Базовый синтаксис\n  // (param1, param2, …, paramN) => { statements }\n  // (param1, param2, …, paramN) => expression\n  // эквивалентно: (param1, param2, …, paramN) => { return expression; }\n  \n  // Круглые скобки не обязательны для единственного параметра:\n  // (singleParam) => { statements }\n  // singleParam => { statements }\n  \n  // Функция без параметров нуждается в круглых скобках:\n  // () => { statements }\n  // () => expression \n  // Эквивалентно: () => { return expression; }\n\n  // Расширенный синтаксис\n  // Когда возвращаете литеральное выражение объекта, заключите тело в скобки\n  // params => ({foo: bar})\n  \n  // Rest параметры и параметры по умолчанию поддерживаются\n  // (param1, param2, ...rest) => { statements }\n  // (param1 = defaultValue1, param2, …, paramN = defaultValueN) => { statements }\n  \n  // Деструктуризация тоже поддерживается\n  // var f = ([a, b] = [1, 2], {x: c} = {x: a + b}) => a + b + c;\n  // f();  // 6\n  \n\n  // В некоторых функциональных шаблонах приветствуются более короткие функции. Сравните:\n// var elements = [\n//   'Hydrogen',\n//   'Helium',\n//   'Lithium',\n//   'Beryllium'\n// ];\n// elements.map(function(element) {\n//   return element.length;\n// }); // Это выражение вернет массив [8, 6, 7, 9]\n\n// Функцию выше можно записать как стрелочную функцию:\n// elements.map((element) => {\n//   return element.length;\n// }); // [8, 6, 7, 9]\n\n// Если единственным оператором в выражении стрелочной функции является return,\n// можно удалить return и окружающие фигурные скобки\n\n// elements.map(element => element.length); // [8, 6, 7, 9]\n\n// В данном случае, поскольку нам нужно только свойство length, мы можем использовать деструктуризированный параметр:\n// Обратите внимание, что строка `\"length\"` соответствует свойству, которое мы хотим получить,\n// в то время как `lengthFooBArX` это просто имя переменной, которую можно назвать как вы хотите\n// elements.map(({ \"length\": lengthFooBArX }) => lengthFooBArX); // [8, 6, 7, 9]\n\n// Это задание деструктуризированного параметра может быть записано, как показано ниже. Тем не менее, обратите внимание,\n// что нет строки `\"length\"`, чтобы выбрать, какое свойство мы хотим получить. Вместо этого в качестве свойства,\n// которое мы хотим извлечь из объекта, используется само литеральное имя переменной `length`\n// elements.map(({ length }) => length); // [8, 6, 7, 9]\n\n// Лямбда-выражения присутствуют в большинстве современных языков программирования (Python, Ruby, Java ...). Это просто выражения, которые создают функции. Это действительно важно для языка программирования для поддержки функций первого класса, что в основном означает передачу функций в качестве аргументов другим функциям или присвоение их переменным.\n\n// В пре-ES6 JavaScript у нас есть функциональные выражения, которые дают нам анонимную функцию (функцию без имени).\n\n// var anon = function (a, b) {return a + b};\n// В ES6 у нас есть функции стрелок с более гибким синтаксисом, которые имеют некоторые бонусные функции и ошибки.\n\n// мы могли бы написать приведенный выше пример как:\n// var anon = (a, b) => a + b;\n// или же\n// var anon = (a, b) => {return a + b};\n// если у нас есть только один параметр, мы можем потерять скобки\n// var anon = a => a;\n// и без параметров\n// var () => {} // noop\n\n// это выглядит довольно хорошо, когда вы меняете что-то вроде:\n// [1,2,3,4] .filter (функция (значение) {возвращаемое значение% 2 === 0});\n// к:\n// [1,2,3,4] .filter (значение => значение% 2 === 0);\n// Одним из основных преимуществ функций стрелок является то, что они не имеют своих собственных значений. Именно это лексически связано с огибающей. Это значит, что мы можем попрощаться с этим ужасным рисунком:\n\n// class Logger {\n//   dumpData(data) {\n//     var _this = this;\n\n//     // this dumps data to a file and get the name of the file via a callback\n//     dump(data, function (outputFile) {\n//       _this.latestLog = outputFile;\n//     });\n//   }\n// }\n// using arrow functions\n// class Logger {\n//   dumpData(data) {\n//     dump(data, outputFile => this.latestLog = outputFile);\n//   }\n// }\n// However there are some gotchas you should be aware of:\n\n// This should be pretty obvious, but because this is lexically bound you can't change it; call() and apply() will not be able to provide another value for this.\n// There is no arguments variable:\n  // (function () {console.log(arguments)})(1, 2); // will output [1, 2]\n  // (() => console.log(arguments))(1, 2); // will raise ReferenceError: arguments is not defined\n// Be careful when returning object literals\n  // (() => {foo: 1})() // this will return undefined. 'foo: 1' is interpreted as a statement composed of a label and the literal 1\n  // the correct way should be wrapping it with parenthesis\n  // (() => ({foo: 1}))() // returns Object {foo: 1}\n// Remember this is all ES6 and not supported by all browsers but you can always use Babel.\n\n// Однако есть некоторые ошибки, о которых вы должны знать:\n\n// Это должно быть довольно очевидно, но поскольку это лексически связано, вы не можете его изменить; call () и apply () не смогут предоставить другое значение для этого.\n// Переменная аргументов отсутствует:\n  // (function () {console.log (arguments)}) (1, 2); // выведем [1, 2]\n  // (() => console.log (arguments)) (1, 2); // вызовет ReferenceError: аргументы не определены\n// Будьте осторожны при возврате литералов объекта\n  // (() => {foo: 1}) () // это вернет undefined. 'foo: 1' интерпретируется как утверждение, состоящее из метки и литерала 1\n  // правильный путь должен заключаться в скобки\n  // (() => ({foo: 1})) () // возвращает объект {foo: 1}\n// Помните, что это все ES6 и поддерживается не всеми браузерами, но вы всегда можете использовать Babel.\n\n// let index = e.target.closest('.cart-item').getAttribute('id');\n// console.log('index= ', index);\n\n\n// x => x.id === +(index))\n\n\n\n// ================== Метод some ===========================\n\nlocalStorage.clear();\ninitStorage();\n\nlet products = [];\n\n// создадим объект\n\nlet prod = {\n  id: 1, \n  name: 'Nice Cat', \n  price: 555, \n  picture:['cat1.jpg', 'cat2.jpg', 'cat3.jpg'],\n  amount: 1\n};\n\nproducts.push(new Product(prod.id,prod.name,prod.price,prod.picture,prod.amount));\n\n// tmpProducts.push(new Product(prod.id,prod.name,prod.price,prod.picture,1));\n\nwindow.localStorage.setItem(\"basket\",JSON.stringify(products));\n\nfunction getProducts() {\n  return JSON.parse(window.localStorage.getItem(\"basket\"));\n}\n\nlet tmpProducts = getProducts();\n\nconsole.log('tmpProducts: ', tmpProducts);\n\n// Метод some() вызывает переданную функцию callback один раз для каждого элемента, присутствующего в массиве до тех пор, пока не найдет такой, для которого callback вернет истинное значение (значение, становящееся равным true при приведении его к типу Boolean). \n\n// Проверка значений элементов массива - существует ли в массиве какой-нибудь элемент с elem.id = id.\n\nlet id = 1;\n\nlet exist = tmpProducts.some(elem => {\n  return elem.id === id;\n});\n\n// Если такой элемент найден, метод some() немедленно вернёт true. В противном случае, если callback вернёт false для всех элементов массива, метод some() вернёт false. \n\nconsole.log(exist);\n\n// Функция callback вызывается только для индексов массива, имеющих присвоенные значения; она не вызывается для индексов, которые были удалены или которым значения никогда не присваивались.\n\n// if(tmpProducts.length > 0){\n//   let exist = tmpProducts.some(elem => {\n//     return elem.id === prod.id;\n//   });\n// }\n\n// Функция callback вызывается с тремя аргументами: значением элемента, индексом элемента и массивом, по которому осуществляется проход.\n\n// Метод some() не изменяет массив, для которого он был вызван.\nconsole.log(tmpProducts);\n\n// Диапазон элементов, обрабатываемых методом some(), устанавливается до первого вызова функции callback. Элементы, добавленные в массив после начала выполнения метода some(), не будут посещены функцией callback. Если существующие элементы массива изменятся, значения, переданные в функцию callback, будут значениями на тот момент времени, когда метод some() посетит их; удалённые элементы посещены не будут.\n\n// Пример: проверка значений элементов массива\n\nfunction isBiggerThan10(element, index, array) {\n  return element > 10;\n}\n[2, 5, 8, 1, 4].some(isBiggerThan10);  // false\n[12, 5, 8, 1, 4].some(isBiggerThan10); // true\n\n// Стрелочные функции предоставляют более краткий синтаксис для подобных проверок.\n[2, 5, 8, 1, 4].some(elem => elem > 10);  // false\n[12, 5, 8, 1, 4].some(elem => elem > 10); // true\n\n\n// if(tmpProducts.length > 0){\n//   let exist = tmpProducts.some(elem => {\n//     return elem.id === prod.id;\n//   });\n//   if(exist){\n//     tmpProducts.forEach(elem => {\n//         if(elem.id === prod.id){\n//           elem.amount += 1;\n//         }\n//     })\n//   } else {\n//     tmpProducts.push(new Product(prod.id,prod.name,prod.price,prod.picture,1));\n//   }\n// }\n// else{\n//   tmpProducts.push(new Product(prod.id,prod.name,prod.price,prod.picture,1));\n// }\n// window.localStorage.setItem(\"basket\",JSON.stringify(tmpProducts));\n\n\n// ================== Метод find ===========================\n\n// Метод find() возвращает значение первого найденного в массиве элемента, которое удовлетворяет условию переданному в callback функции.  В противном случае возвращается undefined.\n\n\n// Если вам нужно найти позицию элемента или наличие элемента в массиве, используйте Array.prototype.indexOf() или Array.prototype.includes() соответственно.\n\n\n//arr.find(callback[, thisArg])\n// Параметры\n// callback - Функция, вызывающаяся для каждого значения в массиве, принимает три аргумента:\n// element - Текущий обрабатываемый элемент в массиве.\n// index - Индекс текущего обрабатываемого элемента в массиве.\n// array - Массив, по которому осуществляется проход.\n// thisArg - Необязательный параметр. Значение, используемое в качестве this при выполнении функции callback.\n// Возвращаемое значение - Значение элемента из массива, если элемент прошёл проверку, иначе undefined.\n\n\n// Метод find вызывает переданную функцию callback один раз для каждого элемента, присутствующего в массиве, до тех пор, пока она не вернёт true. Если такой элемент найден, метод find немедленно вернёт значение этого элемента. В противном случае, метод find вернёт undefined. До Firefox 34 функция callback не вызывалась для «дырок» в массивах (bug 1058394).\n\n// Функция callback вызывается с тремя аргументами: значением элемента, индексом элемента и массивом, по которому осуществляется проход.\n\n// Если в метод find был передан параметр thisArg, при вызове callback он будет использоваться в качестве значения this. В противном случае в качестве значения this будет использоваться значение undefined.\n\n// Метод find не изменяет массив, для которого он был вызван.\n\n// Диапазон элементов, обрабатываемых методом find, устанавливается до первого вызова функции callback. Элементы, добавленные в массив после начала выполнения метода find, не будут посещены функцией callback. Если существующие, непосещённые элементы массива изменяются функцией callback, их значения, переданные в функцию, будут значениями на тот момент времени когда метод find посетит их; удалённые элементы все еще будут посещены. \n\n// Пример: поиск простого числа в массиве\n// Следующий пример находит в массиве положительных чисел элемент, являющийся простым числом (либо возвращает undefined, если в массиве нет простых чисел).\n\n// function isPrime(element, index, array) {\n//   var start = 2;\n//   while (start <= Math.sqrt(element)) {\n//     if (element % start++ < 1) {\n//       return false;\n//     }\n//   }\n//   return element > 1;\n// }\n\n// console.log([4, 6, 8, 12].find(isPrime)); // undefined, не найдено\n// console.log([4, 5, 8, 12].find(isPrime)); // 5\n\n// Метод indexOf() сравнивает искомый элемент searchElement с элементами в массиве, используя строгое сравнение (метод использует оператор ===, тройное равно).\n\n// let index = e.target.closest('.cart-item').getAttribute('id');\n// console.log('index= ', index);\n\n// tmpProducts.splice(tmpProducts.indexOf(tmpProducts.find(x => x.id === +(index))), 1);\n})();"},"lineCount":null}},"error":null,"hash":"929d8dd2bd4eafe709930d95f342ae3b","cacheData":{"env":{}}}