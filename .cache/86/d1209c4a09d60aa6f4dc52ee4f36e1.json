{"id":"js/test.js","dependencies":[{"name":"/home/janus/www/js-w15/package.json","includedInParent":true,"mtime":1566989384520}],"generated":{"js":"'use strict'; // Синтаксис для создания нового массива:\n// var arr = new Array(); // Создали новый пустой массив []\n// var arrs = []; // Тоже создали новый пустой массив []\n// Создание элементов массива возможно несколькими способами:\n// var earth = new Array(4); /* массив из 4-х элементов*/\n// earth[0] = \"Earth\";\n// earth[1] = \"24 h\";\n// earth[2] = 6378;\n// earth[3] = 365.25;\n// var earth = new Array(\"Earth\", \"24 h\", 6378, 365.25);\n// var earth = new Array(); // пустой массив\n// earth.xtype = \"Solar\";\n// earth.xday = \"24 h\";\n// earth.radius = 6378;\n// earth.period = 365.25;\n// var country = [\"UK\", \"USA\", \"GB\"];\n// Если вы указываете числа или значения true или false при определении массива, то тип переменной будет числовой или булев тип, а не строковый.\n// var arr1 = ['первый элемент', 'второй элемент'];\n// console.log(arr1[0]);              // напечатает 'первый элемент'\n// console.log(arr1[1]);              // напечатает 'второй элемент'\n// Обращение или доступ к элементам массива в javaScript:\n// var mas=new Array(1,25,'Hey');\n// mas[0]='Bye';\n// mas[1]=35;\n// Свойство массивов length взаимосвязано с числом свойств.\n// var fruits = [];\n// fruits.push('банан', 'яблоко', 'персик');\n// console.log(fruits.length); // 3\n// Длина length – не количество элементов массива, а последний индекс + 1.\n// var arr2 = [];\n// arr2[1000] = true;\n// console.log(arr2.length); // 1001\n// При уменьшении length массив укорачивается.\n// var arr3 = [1, 2, 3, 4, 5];\n// arr3.length = 2; // укоротить до 2 элементов\n// console.log(arr3[3] );\n// arr3.length = 5; // вернуть length обратно, как было\n// console.log(arr3[3]); // undefined: значения не вернулись\n// ==============================================\n// let addToCart = document.querySelector('.add-to-cart');\n// console.dir(typeof(addToCart)); // object\n// addToCart.addEventListener('click', function () {\n//     let y = 180;\n//     document.querySelector('.card-img-top').style.transform = 'rotateY(' + y + 'deg)';\n// }); \n// ======================== NodeList ==========================\n// let addToCarts = document.querySelectorAll('.add-to-cart'); \n// console.dir(addToCarts); // NodeList(2)\n// console.log(addToCarts.length);\n// перебор элементов массива addToCarts:\n// for (let i = 0; i < addToCarts.length; i++) {\n//     console.log(addToCarts.item(i));\n//     console.log(addToCarts[i]); // Вызов myNodeList.item(i) необязателен в JavaScript\n// }\n// Обход DOM коллекций NodeList: \n// Оператор for...of работает только на платформах, где\n// реализован NodeList.prototype[Symbol.iterator]\n// let list = document.querySelectorAll('.add-to-cart');\n// for (let item of list) {\n//     console.log(item);\n// }\n// Метод NodeList.entries () возвращает итератор, позволяющий просмотреть все пары ключ / значение, содержащиеся в этом объекте. Значения являются объектами Node.\n// Using for..of\n// for(var entry of addToCarts.entries()) { \n//     console.log(entry);\n// }\n// Метод NodeList.keys () возвращает итератор, позволяющий просмотреть все ключи, содержащиеся в этом объекте. Ключи имеют целое число без знака.\n// Using for..of \n// for(var key of addToCarts.keys()) { \n//     console.log(key); \n// }\n// Метод NodeList.values () возвращает итератор, позволяющий просмотреть все значения, содержащиеся в этом объекте. Значения являются объектами Node.\n// Using for..of \n// for(var value of addToCarts.values()) { \n//     console.log(value); \n// }\n// forEach\n// addToCarts.forEach( \n//     function(value, index) { \n//       console.log(value + ', ' + index); \n//     }\n// );\n// let addToCarts = document.getElementsByClassName('add-to-cart'); // Это HTMLCollection\n// console.log(addToCarts.item(0));     // Вы можете использовать метод item( ) для доступа к элементу\n// console.log(addToCarts[1]);          // Однако, использование квадратных скобок намного проще и более распространено\n// перебор элементов массива addToCarts:\n// console.log(addToCarts.length);\n// for (let i = 0; i < addToCarts.length; i++) {\n//       console.log(addToCarts[i]);\n// }\n// for (let i=0; i<addToCarts.length; i++ ){\n//    addToCarts[i].addEventListener('click', function (e) {\n//        console.log(e);\n//    });\n// }\n// for (let i=0; i<addToCarts.length; i++ ){\n//     addToCarts[i].addEventListener('click', function (e) {\n//         console.log(e.target);\n//         // e.target.style.display = 'none';\n//     });\n// }\n// for (let i=0; i<addToCarts.length; i++ ){\n//     addToCarts[i].addEventListener('click', function (e) {\n//         // ==========parentNode==============\n//         // console.log(e.target.parentNode);\n//         // console.log(e.target.parentNode.parentNode.parentNode.parentNode);\n//         // =========childNodes==============\n//         // console.log(e.target.parentNode.parentNode.parentNode.parentNode.childNodes);\n//         // ===========childElementCount==========\n//         // console.log(e.target.parentNode.parentNode.parentNode.parentNode.childElementCount);\n//         // ===========children childElementCount=========\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.children);\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.childElementCount);\n// let y = 180;\n// e.target.parentNode.parentNode.parentNode.parentNode.children[0].style.transform = 'rotateY(' + y + 'deg)';\n//         // =========firstChild lastChild==============\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.firstChild);\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.lastChild);\n//         // =========nextSibling previousSibling=============\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.firstChild.nextSibling);\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.lastChild.previousSibling);\n//         // ========firstElementChild lastElementChild==========\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.firstElementChild);\n//         e.target.parentNode.parentNode.parentNode.parentNode.firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.lastElementChild);\n//     });\n// }\n// ================ this =====================\n// console.log(this.document === document); // true\n// // В браузерах, объект window также является глобальным:\n// console.log(this === window); // true\n// this.a = 37;\n// console.log(window.a); // 37\n// function f() {\n//     console.log(this === window); // true\n// }\n// f();\n// (function () {\n//     console.log(this === window); // true\n// })();\n// var globalObject = this;\n// var foo = (() => this);\n// console.log(foo() === globalObject); // true\n// var o = {\n//     prop: 37,\n//     f: function() {\n//       return this.prop;\n//     }\n//   };\n// console.log(o.f()); // logs 37\n// ============================================\n// for (let i=0; i<addToCarts.length; i++ ){\n//   addToCarts[i].addEventListener('click', function () {\n//       console.log(this);\n//       let y = 180;\n//       console.log(this.parentNode.parentNode.parentNode.parentNode.firstElementChild);\n//       this.parentNode.parentNode.parentNode.parentNode.firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//   });\n// }\n// for (let i=0; i<addToCarts.length; i++ ){\n//   addToCarts[i].addEventListener('click', function () {\n//       let y = 180;\n//       // this.parentNode.parentNode.parentNode.parentNode.firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//       this.closest(\".card\").firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//   });\n// }\n// let addToCarts = document.querySelectorAll('.add-to-cart');\n// addToCarts.forEach(function(addToCart){\n//     addToCart.addEventListener('click', function() {\n//         let y = 180;\n//         this.closest(\".card\").firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//     });\n// });\n// let plus = document.querySelectorAll('.plus');\n// plus.forEach(function(el){\n//   el.addEventListener('click', function() {\n//     let val = this.previousElementSibling.innerText;\n//     // val = this.previousElementSibling.innerText = val+1;\n//     val = this.previousElementSibling.innerText = +(val)+1;\n//   });\n// });\n// let minus = document.querySelectorAll('.minus');\n// minus.forEach(function(el){\n//   el.addEventListener('click', function() {\n//     let val = this.nextElementSibling.innerText;\n//     if (val > 1) {\n//     //   val = this.nextElementSibling.innerText = val-1;\n//       val = this.nextElementSibling.innerText = +(val)-1;\n//     }\n//   });\n// });"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"js/test.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":14},"source":"js/test.js","original":{"line":4,"column":0}},{"generated":{"line":2,"column":0},"source":"js/test.js","original":{"line":5,"column":0}},{"generated":{"line":3,"column":0},"source":"js/test.js","original":{"line":6,"column":0}},{"generated":{"line":4,"column":0},"source":"js/test.js","original":{"line":7,"column":0}},{"generated":{"line":5,"column":0},"source":"js/test.js","original":{"line":9,"column":0}},{"generated":{"line":6,"column":0},"source":"js/test.js","original":{"line":11,"column":0}},{"generated":{"line":7,"column":0},"source":"js/test.js","original":{"line":12,"column":0}},{"generated":{"line":8,"column":0},"source":"js/test.js","original":{"line":13,"column":0}},{"generated":{"line":9,"column":0},"source":"js/test.js","original":{"line":14,"column":0}},{"generated":{"line":10,"column":0},"source":"js/test.js","original":{"line":16,"column":0}},{"generated":{"line":11,"column":0},"source":"js/test.js","original":{"line":18,"column":0}},{"generated":{"line":12,"column":0},"source":"js/test.js","original":{"line":19,"column":0}},{"generated":{"line":13,"column":0},"source":"js/test.js","original":{"line":20,"column":0}},{"generated":{"line":14,"column":0},"source":"js/test.js","original":{"line":21,"column":0}},{"generated":{"line":15,"column":0},"source":"js/test.js","original":{"line":22,"column":0}},{"generated":{"line":16,"column":0},"source":"js/test.js","original":{"line":24,"column":0}},{"generated":{"line":17,"column":0},"source":"js/test.js","original":{"line":25,"column":0}},{"generated":{"line":18,"column":0},"source":"js/test.js","original":{"line":27,"column":0}},{"generated":{"line":19,"column":0},"source":"js/test.js","original":{"line":28,"column":0}},{"generated":{"line":20,"column":0},"source":"js/test.js","original":{"line":29,"column":0}},{"generated":{"line":21,"column":0},"source":"js/test.js","original":{"line":31,"column":0}},{"generated":{"line":22,"column":0},"source":"js/test.js","original":{"line":33,"column":0}},{"generated":{"line":23,"column":0},"source":"js/test.js","original":{"line":34,"column":0}},{"generated":{"line":24,"column":0},"source":"js/test.js","original":{"line":35,"column":0}},{"generated":{"line":25,"column":0},"source":"js/test.js","original":{"line":37,"column":0}},{"generated":{"line":26,"column":0},"source":"js/test.js","original":{"line":38,"column":0}},{"generated":{"line":27,"column":0},"source":"js/test.js","original":{"line":39,"column":0}},{"generated":{"line":28,"column":0},"source":"js/test.js","original":{"line":40,"column":0}},{"generated":{"line":29,"column":0},"source":"js/test.js","original":{"line":42,"column":0}},{"generated":{"line":30,"column":0},"source":"js/test.js","original":{"line":43,"column":0}},{"generated":{"line":31,"column":0},"source":"js/test.js","original":{"line":44,"column":0}},{"generated":{"line":32,"column":0},"source":"js/test.js","original":{"line":45,"column":0}},{"generated":{"line":33,"column":0},"source":"js/test.js","original":{"line":47,"column":0}},{"generated":{"line":34,"column":0},"source":"js/test.js","original":{"line":48,"column":0}},{"generated":{"line":35,"column":0},"source":"js/test.js","original":{"line":49,"column":0}},{"generated":{"line":36,"column":0},"source":"js/test.js","original":{"line":50,"column":0}},{"generated":{"line":37,"column":0},"source":"js/test.js","original":{"line":51,"column":0}},{"generated":{"line":38,"column":0},"source":"js/test.js","original":{"line":52,"column":0}},{"generated":{"line":39,"column":0},"source":"js/test.js","original":{"line":54,"column":0}},{"generated":{"line":40,"column":0},"source":"js/test.js","original":{"line":55,"column":0}},{"generated":{"line":41,"column":0},"source":"js/test.js","original":{"line":57,"column":0}},{"generated":{"line":42,"column":0},"source":"js/test.js","original":{"line":59,"column":0}},{"generated":{"line":43,"column":0},"source":"js/test.js","original":{"line":60,"column":0}},{"generated":{"line":44,"column":0},"source":"js/test.js","original":{"line":61,"column":0}},{"generated":{"line":45,"column":0},"source":"js/test.js","original":{"line":62,"column":0}},{"generated":{"line":46,"column":0},"source":"js/test.js","original":{"line":63,"column":0}},{"generated":{"line":47,"column":0},"source":"js/test.js","original":{"line":64,"column":0}},{"generated":{"line":48,"column":0},"source":"js/test.js","original":{"line":66,"column":0}},{"generated":{"line":49,"column":0},"source":"js/test.js","original":{"line":67,"column":0}},{"generated":{"line":50,"column":0},"source":"js/test.js","original":{"line":69,"column":0}},{"generated":{"line":51,"column":0},"source":"js/test.js","original":{"line":71,"column":0}},{"generated":{"line":52,"column":0},"source":"js/test.js","original":{"line":72,"column":0}},{"generated":{"line":53,"column":0},"source":"js/test.js","original":{"line":73,"column":0}},{"generated":{"line":54,"column":0},"source":"js/test.js","original":{"line":74,"column":0}},{"generated":{"line":55,"column":0},"source":"js/test.js","original":{"line":76,"column":0}},{"generated":{"line":56,"column":0},"source":"js/test.js","original":{"line":78,"column":0}},{"generated":{"line":57,"column":0},"source":"js/test.js","original":{"line":79,"column":0}},{"generated":{"line":58,"column":0},"source":"js/test.js","original":{"line":81,"column":0}},{"generated":{"line":59,"column":0},"source":"js/test.js","original":{"line":82,"column":0}},{"generated":{"line":60,"column":0},"source":"js/test.js","original":{"line":83,"column":0}},{"generated":{"line":61,"column":0},"source":"js/test.js","original":{"line":84,"column":0}},{"generated":{"line":62,"column":0},"source":"js/test.js","original":{"line":86,"column":0}},{"generated":{"line":63,"column":0},"source":"js/test.js","original":{"line":88,"column":0}},{"generated":{"line":64,"column":0},"source":"js/test.js","original":{"line":89,"column":0}},{"generated":{"line":65,"column":0},"source":"js/test.js","original":{"line":90,"column":0}},{"generated":{"line":66,"column":0},"source":"js/test.js","original":{"line":91,"column":0}},{"generated":{"line":67,"column":0},"source":"js/test.js","original":{"line":93,"column":0}},{"generated":{"line":68,"column":0},"source":"js/test.js","original":{"line":95,"column":0}},{"generated":{"line":69,"column":0},"source":"js/test.js","original":{"line":96,"column":0}},{"generated":{"line":70,"column":0},"source":"js/test.js","original":{"line":97,"column":0}},{"generated":{"line":71,"column":0},"source":"js/test.js","original":{"line":98,"column":0}},{"generated":{"line":72,"column":0},"source":"js/test.js","original":{"line":99,"column":0}},{"generated":{"line":73,"column":0},"source":"js/test.js","original":{"line":101,"column":0}},{"generated":{"line":74,"column":0},"source":"js/test.js","original":{"line":102,"column":0}},{"generated":{"line":75,"column":0},"source":"js/test.js","original":{"line":103,"column":0}},{"generated":{"line":76,"column":0},"source":"js/test.js","original":{"line":104,"column":0}},{"generated":{"line":77,"column":0},"source":"js/test.js","original":{"line":106,"column":0}},{"generated":{"line":78,"column":0},"source":"js/test.js","original":{"line":107,"column":0}},{"generated":{"line":79,"column":0},"source":"js/test.js","original":{"line":108,"column":0}},{"generated":{"line":80,"column":0},"source":"js/test.js","original":{"line":109,"column":0}},{"generated":{"line":81,"column":0},"source":"js/test.js","original":{"line":110,"column":0}},{"generated":{"line":82,"column":0},"source":"js/test.js","original":{"line":111,"column":0}},{"generated":{"line":83,"column":0},"source":"js/test.js","original":{"line":113,"column":0}},{"generated":{"line":84,"column":0},"source":"js/test.js","original":{"line":115,"column":0}},{"generated":{"line":85,"column":0},"source":"js/test.js","original":{"line":116,"column":0}},{"generated":{"line":86,"column":0},"source":"js/test.js","original":{"line":118,"column":0}},{"generated":{"line":87,"column":0},"source":"js/test.js","original":{"line":120,"column":0}},{"generated":{"line":88,"column":0},"source":"js/test.js","original":{"line":122,"column":0}},{"generated":{"line":89,"column":0},"source":"js/test.js","original":{"line":123,"column":0}},{"generated":{"line":90,"column":0},"source":"js/test.js","original":{"line":124,"column":0}},{"generated":{"line":91,"column":0},"source":"js/test.js","original":{"line":126,"column":0}},{"generated":{"line":92,"column":0},"source":"js/test.js","original":{"line":127,"column":0}},{"generated":{"line":93,"column":0},"source":"js/test.js","original":{"line":128,"column":0}},{"generated":{"line":94,"column":0},"source":"js/test.js","original":{"line":129,"column":0}},{"generated":{"line":95,"column":0},"source":"js/test.js","original":{"line":130,"column":0}},{"generated":{"line":96,"column":0},"source":"js/test.js","original":{"line":132,"column":0}},{"generated":{"line":97,"column":0},"source":"js/test.js","original":{"line":133,"column":0}},{"generated":{"line":98,"column":0},"source":"js/test.js","original":{"line":134,"column":0}},{"generated":{"line":99,"column":0},"source":"js/test.js","original":{"line":135,"column":0}},{"generated":{"line":100,"column":0},"source":"js/test.js","original":{"line":136,"column":0}},{"generated":{"line":101,"column":0},"source":"js/test.js","original":{"line":137,"column":0}},{"generated":{"line":102,"column":0},"source":"js/test.js","original":{"line":139,"column":0}},{"generated":{"line":103,"column":0},"source":"js/test.js","original":{"line":140,"column":0}},{"generated":{"line":104,"column":0},"source":"js/test.js","original":{"line":141,"column":0}},{"generated":{"line":105,"column":0},"source":"js/test.js","original":{"line":142,"column":0}},{"generated":{"line":106,"column":0},"source":"js/test.js","original":{"line":143,"column":0}},{"generated":{"line":107,"column":0},"source":"js/test.js","original":{"line":145,"column":0}},{"generated":{"line":108,"column":0},"source":"js/test.js","original":{"line":146,"column":0}},{"generated":{"line":109,"column":0},"source":"js/test.js","original":{"line":148,"column":0}},{"generated":{"line":110,"column":0},"source":"js/test.js","original":{"line":149,"column":0}},{"generated":{"line":111,"column":0},"source":"js/test.js","original":{"line":151,"column":0}},{"generated":{"line":112,"column":0},"source":"js/test.js","original":{"line":152,"column":0}},{"generated":{"line":113,"column":0},"source":"js/test.js","original":{"line":153,"column":0}},{"generated":{"line":114,"column":0},"source":"js/test.js","original":{"line":155,"column":8}},{"generated":{"line":115,"column":0},"source":"js/test.js","original":{"line":156,"column":8}},{"generated":{"line":116,"column":0},"source":"js/test.js","original":{"line":158,"column":0}},{"generated":{"line":117,"column":0},"source":"js/test.js","original":{"line":159,"column":0}},{"generated":{"line":118,"column":0},"source":"js/test.js","original":{"line":160,"column":0}},{"generated":{"line":119,"column":0},"source":"js/test.js","original":{"line":162,"column":0}},{"generated":{"line":120,"column":0},"source":"js/test.js","original":{"line":163,"column":0}},{"generated":{"line":121,"column":0},"source":"js/test.js","original":{"line":164,"column":0}},{"generated":{"line":122,"column":0},"source":"js/test.js","original":{"line":166,"column":0}},{"generated":{"line":123,"column":0},"source":"js/test.js","original":{"line":167,"column":0}},{"generated":{"line":124,"column":0},"source":"js/test.js","original":{"line":169,"column":0}},{"generated":{"line":125,"column":0},"source":"js/test.js","original":{"line":171,"column":0}},{"generated":{"line":126,"column":0},"source":"js/test.js","original":{"line":173,"column":0}},{"generated":{"line":127,"column":0},"source":"js/test.js","original":{"line":174,"column":0}},{"generated":{"line":128,"column":0},"source":"js/test.js","original":{"line":179,"column":0}},{"generated":{"line":129,"column":0},"source":"js/test.js","original":{"line":180,"column":0}},{"generated":{"line":130,"column":0},"source":"js/test.js","original":{"line":182,"column":0}},{"generated":{"line":131,"column":0},"source":"js/test.js","original":{"line":183,"column":0}},{"generated":{"line":132,"column":0},"source":"js/test.js","original":{"line":185,"column":0}},{"generated":{"line":133,"column":0},"source":"js/test.js","original":{"line":186,"column":0}},{"generated":{"line":134,"column":0},"source":"js/test.js","original":{"line":188,"column":0}},{"generated":{"line":135,"column":0},"source":"js/test.js","original":{"line":189,"column":0}},{"generated":{"line":136,"column":0},"source":"js/test.js","original":{"line":190,"column":0}},{"generated":{"line":137,"column":0},"source":"js/test.js","original":{"line":191,"column":0}},{"generated":{"line":138,"column":0},"source":"js/test.js","original":{"line":193,"column":0}},{"generated":{"line":139,"column":0},"source":"js/test.js","original":{"line":194,"column":0}},{"generated":{"line":140,"column":0},"source":"js/test.js","original":{"line":195,"column":0}},{"generated":{"line":141,"column":0},"source":"js/test.js","original":{"line":197,"column":0}},{"generated":{"line":142,"column":0},"source":"js/test.js","original":{"line":198,"column":0}},{"generated":{"line":143,"column":0},"source":"js/test.js","original":{"line":199,"column":0}},{"generated":{"line":144,"column":0},"source":"js/test.js","original":{"line":201,"column":0}},{"generated":{"line":145,"column":0},"source":"js/test.js","original":{"line":202,"column":0}},{"generated":{"line":146,"column":0},"source":"js/test.js","original":{"line":203,"column":0}},{"generated":{"line":147,"column":0},"source":"js/test.js","original":{"line":204,"column":0}},{"generated":{"line":148,"column":0},"source":"js/test.js","original":{"line":205,"column":0}},{"generated":{"line":149,"column":0},"source":"js/test.js","original":{"line":206,"column":0}},{"generated":{"line":150,"column":0},"source":"js/test.js","original":{"line":207,"column":0}},{"generated":{"line":151,"column":0},"source":"js/test.js","original":{"line":209,"column":0}},{"generated":{"line":152,"column":0},"source":"js/test.js","original":{"line":210,"column":0}},{"generated":{"line":153,"column":0},"source":"js/test.js","original":{"line":211,"column":0}},{"generated":{"line":154,"column":0},"source":"js/test.js","original":{"line":212,"column":0}},{"generated":{"line":155,"column":0},"source":"js/test.js","original":{"line":213,"column":0}},{"generated":{"line":156,"column":0},"source":"js/test.js","original":{"line":214,"column":0}},{"generated":{"line":157,"column":0},"source":"js/test.js","original":{"line":215,"column":0}},{"generated":{"line":158,"column":0},"source":"js/test.js","original":{"line":216,"column":0}},{"generated":{"line":159,"column":0},"source":"js/test.js","original":{"line":217,"column":0}},{"generated":{"line":160,"column":0},"source":"js/test.js","original":{"line":220,"column":0}},{"generated":{"line":161,"column":0},"source":"js/test.js","original":{"line":221,"column":0}},{"generated":{"line":162,"column":0},"source":"js/test.js","original":{"line":222,"column":0}},{"generated":{"line":163,"column":0},"source":"js/test.js","original":{"line":223,"column":0}},{"generated":{"line":164,"column":0},"source":"js/test.js","original":{"line":224,"column":0}},{"generated":{"line":165,"column":0},"source":"js/test.js","original":{"line":225,"column":0}},{"generated":{"line":166,"column":0},"source":"js/test.js","original":{"line":226,"column":0}},{"generated":{"line":167,"column":0},"source":"js/test.js","original":{"line":229,"column":0}},{"generated":{"line":168,"column":0},"source":"js/test.js","original":{"line":231,"column":0}},{"generated":{"line":169,"column":0},"source":"js/test.js","original":{"line":232,"column":0}},{"generated":{"line":170,"column":0},"source":"js/test.js","original":{"line":233,"column":0}},{"generated":{"line":171,"column":0},"source":"js/test.js","original":{"line":234,"column":0}},{"generated":{"line":172,"column":0},"source":"js/test.js","original":{"line":235,"column":0}},{"generated":{"line":173,"column":0},"source":"js/test.js","original":{"line":236,"column":0}},{"generated":{"line":174,"column":0},"source":"js/test.js","original":{"line":239,"column":0}},{"generated":{"line":175,"column":0},"source":"js/test.js","original":{"line":240,"column":0}},{"generated":{"line":176,"column":0},"source":"js/test.js","original":{"line":241,"column":0}},{"generated":{"line":177,"column":0},"source":"js/test.js","original":{"line":242,"column":0}},{"generated":{"line":178,"column":0},"source":"js/test.js","original":{"line":243,"column":0}},{"generated":{"line":179,"column":0},"source":"js/test.js","original":{"line":244,"column":0}},{"generated":{"line":180,"column":0},"source":"js/test.js","original":{"line":245,"column":0}},{"generated":{"line":181,"column":0},"source":"js/test.js","original":{"line":246,"column":0}},{"generated":{"line":182,"column":0},"source":"js/test.js","original":{"line":248,"column":0}},{"generated":{"line":183,"column":0},"source":"js/test.js","original":{"line":250,"column":0}},{"generated":{"line":184,"column":0},"source":"js/test.js","original":{"line":251,"column":0}},{"generated":{"line":185,"column":0},"source":"js/test.js","original":{"line":252,"column":0}},{"generated":{"line":186,"column":0},"source":"js/test.js","original":{"line":253,"column":0}},{"generated":{"line":187,"column":0},"source":"js/test.js","original":{"line":254,"column":0}},{"generated":{"line":188,"column":0},"source":"js/test.js","original":{"line":255,"column":0}},{"generated":{"line":189,"column":0},"source":"js/test.js","original":{"line":256,"column":0}},{"generated":{"line":190,"column":0},"source":"js/test.js","original":{"line":257,"column":0}},{"generated":{"line":191,"column":0},"source":"js/test.js","original":{"line":258,"column":0}}],"sources":{"js/test.js":"'use strict';\n\n\n// Синтаксис для создания нового массива:\n// var arr = new Array(); // Создали новый пустой массив []\n// var arrs = []; // Тоже создали новый пустой массив []\n// Создание элементов массива возможно несколькими способами:\n\n// var earth = new Array(4); /* массив из 4-х элементов*/\n\n// earth[0] = \"Earth\";\n// earth[1] = \"24 h\";\n// earth[2] = 6378;\n// earth[3] = 365.25;\n\n// var earth = new Array(\"Earth\", \"24 h\", 6378, 365.25);\n\n// var earth = new Array(); // пустой массив\n// earth.xtype = \"Solar\";\n// earth.xday = \"24 h\";\n// earth.radius = 6378;\n// earth.period = 365.25;\n\n// var country = [\"UK\", \"USA\", \"GB\"];\n// Если вы указываете числа или значения true или false при определении массива, то тип переменной будет числовой или булев тип, а не строковый.\n\n// var arr1 = ['первый элемент', 'второй элемент'];\n// console.log(arr1[0]);              // напечатает 'первый элемент'\n// console.log(arr1[1]);              // напечатает 'второй элемент'\n\n// Обращение или доступ к элементам массива в javaScript:\n\n// var mas=new Array(1,25,'Hey');\n// mas[0]='Bye';\n// mas[1]=35;\n\n// Свойство массивов length взаимосвязано с числом свойств.\n// var fruits = [];\n// fruits.push('банан', 'яблоко', 'персик');\n// console.log(fruits.length); // 3\n\n// Длина length – не количество элементов массива, а последний индекс + 1.\n// var arr2 = [];\n// arr2[1000] = true;\n// console.log(arr2.length); // 1001\n\n// При уменьшении length массив укорачивается.\n// var arr3 = [1, 2, 3, 4, 5];\n// arr3.length = 2; // укоротить до 2 элементов\n// console.log(arr3[3] );\n// arr3.length = 5; // вернуть length обратно, как было\n// console.log(arr3[3]); // undefined: значения не вернулись\n\n// ==============================================\n// let addToCart = document.querySelector('.add-to-cart');\n\n// console.dir(typeof(addToCart)); // object\n\n// addToCart.addEventListener('click', function () {\n//     let y = 180;\n//     document.querySelector('.card-img-top').style.transform = 'rotateY(' + y + 'deg)';\n// }); \n// ======================== NodeList ==========================\n// let addToCarts = document.querySelectorAll('.add-to-cart'); \n\n// console.dir(addToCarts); // NodeList(2)\n// console.log(addToCarts.length);\n\n// перебор элементов массива addToCarts:\n\n// for (let i = 0; i < addToCarts.length; i++) {\n//     console.log(addToCarts.item(i));\n//     console.log(addToCarts[i]); // Вызов myNodeList.item(i) необязателен в JavaScript\n// }\n\n// Обход DOM коллекций NodeList: \n\n// Оператор for...of работает только на платформах, где\n// реализован NodeList.prototype[Symbol.iterator]\n\n// let list = document.querySelectorAll('.add-to-cart');\n// for (let item of list) {\n//     console.log(item);\n// }\n\n// Метод NodeList.entries () возвращает итератор, позволяющий просмотреть все пары ключ / значение, содержащиеся в этом объекте. Значения являются объектами Node.\n\n// Using for..of\n// for(var entry of addToCarts.entries()) { \n//     console.log(entry);\n// }\n\n// Метод NodeList.keys () возвращает итератор, позволяющий просмотреть все ключи, содержащиеся в этом объекте. Ключи имеют целое число без знака.\n\n// Using for..of \n// for(var key of addToCarts.keys()) { \n//     console.log(key); \n// }\n// Метод NodeList.values () возвращает итератор, позволяющий просмотреть все значения, содержащиеся в этом объекте. Значения являются объектами Node.\n\n// Using for..of \n// for(var value of addToCarts.values()) { \n//     console.log(value); \n// }\n\n// forEach\n// addToCarts.forEach( \n//     function(value, index) { \n//       console.log(value + ', ' + index); \n//     }\n// );\n\n// let addToCarts = document.getElementsByClassName('add-to-cart'); // Это HTMLCollection\n\n// console.log(addToCarts.item(0));     // Вы можете использовать метод item( ) для доступа к элементу\n// console.log(addToCarts[1]);          // Однако, использование квадратных скобок намного проще и более распространено\n\n// перебор элементов массива addToCarts:\n\n// console.log(addToCarts.length);\n\n// for (let i = 0; i < addToCarts.length; i++) {\n//       console.log(addToCarts[i]);\n// }\n\n// for (let i=0; i<addToCarts.length; i++ ){\n//    addToCarts[i].addEventListener('click', function (e) {\n//        console.log(e);\n//    });\n// }\n\n// for (let i=0; i<addToCarts.length; i++ ){\n//     addToCarts[i].addEventListener('click', function (e) {\n//         console.log(e.target);\n//         // e.target.style.display = 'none';\n//     });\n// }\n\n// for (let i=0; i<addToCarts.length; i++ ){\n//     addToCarts[i].addEventListener('click', function (e) {\n//         // ==========parentNode==============\n//         // console.log(e.target.parentNode);\n//         // console.log(e.target.parentNode.parentNode.parentNode.parentNode);\n        \n//         // =========childNodes==============\n//         // console.log(e.target.parentNode.parentNode.parentNode.parentNode.childNodes);\n        \n//         // ===========childElementCount==========\n//         // console.log(e.target.parentNode.parentNode.parentNode.parentNode.childElementCount);\n        \n//         // ===========children childElementCount=========\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.children);\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.childElementCount);\n        \n        // let y = 180;\n        // e.target.parentNode.parentNode.parentNode.parentNode.children[0].style.transform = 'rotateY(' + y + 'deg)';\n\n//         // =========firstChild lastChild==============\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.firstChild);\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.lastChild);\n        \n//         // =========nextSibling previousSibling=============\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.firstChild.nextSibling);\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.lastChild.previousSibling);\n        \n//         // ========firstElementChild lastElementChild==========\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.firstElementChild);\n\n//         e.target.parentNode.parentNode.parentNode.parentNode.firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n\n//         console.log(e.target.parentNode.parentNode.parentNode.parentNode.lastElementChild);\n        \n//     });\n// }\n\n\n\n\n// ================ this =====================\n// console.log(this.document === document); // true\n\n// // В браузерах, объект window также является глобальным:\n// console.log(this === window); // true\n\n// this.a = 37;\n// console.log(window.a); // 37\n\n// function f() {\n//     console.log(this === window); // true\n// }\n// f();\n\n// (function () {\n//     console.log(this === window); // true\n// })();\n\n// var globalObject = this;\n// var foo = (() => this);\n// console.log(foo() === globalObject); // true\n\n// var o = {\n//     prop: 37,\n//     f: function() {\n//       return this.prop;\n//     }\n//   };\n// console.log(o.f()); // logs 37\n\n// ============================================\n// for (let i=0; i<addToCarts.length; i++ ){\n//   addToCarts[i].addEventListener('click', function () {\n//       console.log(this);\n//       let y = 180;\n//       console.log(this.parentNode.parentNode.parentNode.parentNode.firstElementChild);\n//       this.parentNode.parentNode.parentNode.parentNode.firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//   });\n// }\n\n\n// for (let i=0; i<addToCarts.length; i++ ){\n//   addToCarts[i].addEventListener('click', function () {\n//       let y = 180;\n//       // this.parentNode.parentNode.parentNode.parentNode.firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//       this.closest(\".card\").firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//   });\n// }\n\n\n// let addToCarts = document.querySelectorAll('.add-to-cart');\n\n// addToCarts.forEach(function(addToCart){\n//     addToCart.addEventListener('click', function() {\n//         let y = 180;\n//         this.closest(\".card\").firstElementChild.style.transform = 'rotateY(' + y + 'deg)';\n//     });\n// });\n\n\n// let plus = document.querySelectorAll('.plus');\n// plus.forEach(function(el){\n//   el.addEventListener('click', function() {\n//     let val = this.previousElementSibling.innerText;\n//     // val = this.previousElementSibling.innerText = val+1;\n//     val = this.previousElementSibling.innerText = +(val)+1;\n//   });\n// });\n\n// let minus = document.querySelectorAll('.minus');\n\n// minus.forEach(function(el){\n//   el.addEventListener('click', function() {\n//     let val = this.nextElementSibling.innerText;\n//     if (val > 1) {\n//     //   val = this.nextElementSibling.innerText = val-1;\n//       val = this.nextElementSibling.innerText = +(val)-1;\n//     }\n//   });\n// });\n"},"lineCount":null}},"error":null,"hash":"d9685be6f16137e93770099858b5d904","cacheData":{"env":{}}}